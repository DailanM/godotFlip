Sorting 14 points.
predicate constants generated!
_bfPredConsts: [ (5.9604645E-08), (4097), (1.7881396E-07), (1.7881399E-07), (1.1920933E-07), (3.1974437E-14), (4.172327E-07), (1.7881403E-07), (9.237062E-14), (5.960468E-07), (2.3841875E-07), (1.5631952E-13), (9.536751E-07), (2.9802348E-07), (2.5224297E-13), (6.556515E-07), (3.5762804E-07), (1.7881399E-07) ]
----------------------------- INIT! -----------------------------
bfTetra: [ (0, 1, 2, 3) ]
bfFace: [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2) ]
bfEdge: [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3) ]
----------- check for split: loop number 1 -----------
----------------------------- DETERMINE SPLIT! -----------------------------
numPointsRemaining: 14 with 
pointsToAdd:      [ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 ]
tetraOfPoint:     [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
splittingTetraSum:[ 1 ]
pointIsSplitting: [ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
SplittingTetra:   [ 0 ]
tetIsSplitBy:     [ 5 ]
tetraToSplit:     [ 1 ]
New buffer sizes: bftetra = 4, bfFace = 10, bfEdge = 10
Using these numFreedtetra = 0, numFreedFace = 0, numFreedEdge = 0
FreedTetra: []
FreedFaces: []
FreedEdges: []
----------------------------- SPLIT! -----------------------------
# tetra: 4 # face: 10 # edge: 10
bfTetra:              [ (5, 2, 3, 1), (0, 5, 2, 3), (0, 1, 5, 3), (2, 0, 1, 5) ]
bfTetraToFace:        [ (0, 8, 7, 9), (9, 1, 6, 5), (8, 6, 2, 4), (4, 7, 5, 3) ]
bfTetraToEdge:        [ (8, 9, 7, 5), (3, 4, 6, 1), (2, 8, 9, 5), (0, 6, 2, 7), (4, 9, 1, 3), (8, 0, 6, 7) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 1, 5), (0, 5, 2), (0, 5, 3), (1, 5, 2), (1, 5, 3), (2, 3, 5) ]
bfFaceToTetra:        [ (0, 0), (0, 1), (2, 0), (0, 3), (3, 2), (3, 1), (1, 2), (0, 3), (2, 0), (1, 0) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (1, 5), (2, 5), (3, 5) ]
------------ compacting pointsToAdd! ------------
bfPointsToAdd:          [ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 ]
bfPointIsSplitting:     [ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
bfPrefixSum:            [ 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 ]
New bfPointsToAdd:      [ 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 ]
New TetOfPoints:        [ 0, 2, 2, 0, 2, 0, 1, 0, 0, 2, 1, 0, 2 ]
bfLocations:        [ 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 0*3^3 0*3^2 0*3^1 2*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 0*3^3 2*3^2 2*3^1 2*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 2*3^3 0*3^2 2*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 0*3^3 0*3^2 0*3^1 2*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 0*3^3 2*3^2 2*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 0*3^3 0*3^2 0*3^1 2*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 2*3^4 0*3^3 2*3^2 0*3^1 2*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 0*3^3 0*3^2 0*3^1 2*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 0*3^3 0*3^2 0*3^1 2*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 0*3^3 2*3^2 2*3^1 2*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 2*3^4 0*3^3 2*3^2 2*3^1 2*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 0*3^3 0*3^2 0*3^1 2*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 2*3^3 0*3^2 2*3^1 2*3^0 
 ]
#bad: 0 bfBadPoints:[]
Final TetOfPoints:  [ 0, 2, 2, 0, 2, 0, 1, 0, 0, 2, 1, 0, 2 ]
(mark) bfActiveFaces:           [ 0, 0, 0, 0 ]
bfPrefixSum:                    [ 0, 0, 0, 0 ]
----------- check for split: loop number 2 -----------
----------------------------- DETERMINE SPLIT! -----------------------------
numPointsRemaining: 13 with 
pointsToAdd:      [ 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 ]
tetraOfPoint:     [ 0, 2, 2, 0, 2, 0, 1, 0, 0, 2, 1, 0, 2 ]
splittingTetraSum:[ 1, 2, 3, 3 ]
pointIsSplitting: [ 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0 ]
SplittingTetra:   [ 0, 1, 2 ]
tetIsSplitBy:     [ 10, 11, 14 ]
tetraToSplit:     [ 1, 2, 3, 3 ]
New buffer sizes: bftetra = 13, bfFace = 28, bfEdge = 22
Using these numFreedtetra = 0, numFreedFace = 0, numFreedEdge = 0
FreedTetra: []
FreedFaces: []
FreedEdges: []
----------------------------- SPLIT! -----------------------------
# tetra: 13 # face: 28 # edge: 22
bfTetra:              [ (10, 3, 1, 2), (11, 2, 3, 5), (14, 5, 3, 1), (2, 0, 1, 5), (5, 10, 3, 1), (5, 2, 10, 1), (3, 5, 2, 10), (0, 11, 2, 3), (0, 5, 11, 3), (2, 0, 5, 11), (0, 14, 5, 3), (0, 1, 14, 3), (5, 0, 1, 14) ]
bfTetraToFace:        [ (0, 14, 13, 15), (9, 20, 19, 21), (8, 26, 25, 27), (4, 7, 5, 3), (15, 8, 12, 11), (14, 12, 7, 10), (10, 13, 11, 9), (21, 1, 18, 17), (20, 18, 6, 16), (16, 19, 17, 5), (27, 6, 24, 23), (26, 24, 2, 22), (22, 25, 23, 4) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 16, 17), (15, 5, 8, 9), (20, 21, 19, 9), (7, 4, 1, 3), (8, 0, 6, 7), (10, 9, 7, 12), (13, 4, 8, 10), (7, 11, 3, 13), (9, 5, 12, 8), (10, 11, 14, 1), (2, 16, 17, 5), (6, 14, 2, 15), (9, 17, 1, 8), (16, 6, 14, 15), (18, 6, 2, 20), (21, 9, 0, 18), (2, 19, 4, 21), (6, 7, 20, 0) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 1, 5), (0, 5, 2), (0, 5, 3), (1, 5, 2), (1, 5, 3), (2, 3, 5), (5, 2, 10), (5, 10, 3), (5, 10, 1), (2, 10, 3), (2, 10, 1), (3, 1, 10), (0, 5, 11), (0, 11, 2), (0, 11, 3), (5, 11, 2), (5, 11, 3), (2, 3, 11), (0, 1, 14), (0, 14, 5), (0, 14, 3), (1, 14, 5), (1, 14, 3), (5, 3, 14) ]
bfFaceToTetra:        [ (0, 0), (0, 7), (11, 0), (0, 3), (3, 12), (3, 9), (8, 10), (5, 3), (2, 4), (1, 6), (6, 5), (6, 4), (4, 5), (0, 6), (5, 0), (4, 0), (9, 8), (9, 7), (7, 8), (1, 9), (8, 1), (7, 1), (12, 11), (12, 10), (10, 11), (2, 12), (11, 2), (10, 2) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (1, 5), (2, 5), (3, 5), (5, 10), (2, 10), (3, 10), (1, 10), (0, 11), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (5, 14), (3, 14) ]
------------ compacting pointsToAdd! ------------
bfPointsToAdd:          [ 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 ]
bfPointIsSplitting:     [ 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0 ]
bfPrefixSum:            [ 1, 2, 3, 4, 5, 5, 5, 6, 7, 7, 8, 9, 10 ]
New bfPointsToAdd:      [ 4, 6, 7, 8, 9, 12, 13, 15, 16, 17 ]
New TetOfPoints:        [ 4, 10, 12, 6, 10, 6, 6, 7, 4, 12 ]
bfLocations:        [ 
bad: 0 exp: 0*3^6 0*3^5 2*3^4 0*3^3 2*3^2 2*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 2*3^4 0*3^3 2*3^2 0*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 2*3^5 2*3^4 2*3^3 0*3^2 0*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 2*3^5 2*3^4 2*3^3 2*3^2 0*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 2*3^4 0*3^3 2*3^2 2*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 2*3^5 2*3^4 2*3^3 2*3^2 2*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 2*3^5 2*3^4 2*3^3 2*3^2 0*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 2*3^4 0*3^3 2*3^2 2*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 2*3^4 0*3^3 2*3^2 0*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 2*3^5 0*3^4 2*3^3 0*3^2 0*3^1 0*3^0 
 ]
#bad: 0 bfBadPoints:[]
Final TetOfPoints:  [ 4, 10, 12, 6, 10, 6, 6, 7, 4, 12 ]
(mark) bfActiveFaces:           [ 0, 0, 0, 0, 1, 1, 1, 1, 1, 1 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 1, 2, 3, 4, 5, 6 ]
----------- check for flip: loop number 1 -----------
#active: 6 (cpct) bfActiveFaces:[ 4, 5, 6, 7, 8, 9 ]
                    bfFlipInfo: [ 0, 0, 1, 1, 1, 1 ]
#indtrmnd: 0  bfIndetrmndFaces: []
              final bfFlipInfo: [ 0, 0, 1, 1, 1, 1 ]
#bad: 4             bfBadFaces: [ 2, 3, 4, 5 ]
                          bfFlipInfo: [ 000000000000001000000000, 000000000000001010000000, 000000000000011100000000, 000000000000010100000000 ]
                          bfFlipInfo: [ 000000000000001000000000, 000000000000001010000000, 000000000000011100000000, 000000000000010100000000 ]
#indtrmnd: 0 bfIndeterminedConvexity: []
      finalized convexity bfFlipInfo: [ 000000000000001000000000, 000000000000001010000000, 000000000000011100000000, 000000000000010100000000 ]
#nonCvx: 0       bfNonconvexBadFaces: []
                   bfTetraMarkedFlip: [ 0, 4, 3, 2, 3, 2, 4, 0, 1, 0, 1, 0, 0 ]
 (13 GOOD) Final -Marked- bfFlipInfo: [ 000000000010001000000000, 000000000010001010000000, 000000000010011100000000, 000000000010010100000000 ]
bfFirstPrefixSum (3-2):            [ 0, 0, 0, 0 ]
              final bfFlipInfo: [ 000000000010001000000000, 000000000010001010000000, 000000000010011100000000, 000000000010010100000000 ]
#flip: 4, 0 bfBadFacesToFlip: [ 0, 1, 2, 3 ]
---- relocating point in tetra involved in a flip: 
pointsToAdd:      [ 4, 6, 7, 8, 9, 12, 13, 15, 16, 17 ]
tetraOfPoint:     [ 4, 10, 12, 6, 10, 6, 6, 7, 4, 12 ]
PointInFlipMark:  [ 1, 1, 0, 1, 1, 1, 1, 0, 1, 0 ]
PointInFlipSum:   [ 1, 2, 2, 3, 4, 5, 6, 6, 7, 7 ]
7 PointsInFlips:  [ 0, 1, 3, 4, 5, 6, 8 ]
--------------- relocating ---------------
(old) pointsToAdd: [ 4, 6, 7, 8, 9, 12, 13, 15, 16, 17 ]
 new tetraOfPoint: [ 4, 13, 12, 16, 10, 6, 16, 7, 2, 12 ]
#bad 0 bfBadPoints:[]
(old) pointsToAdd: [ 4, 6, 7, 8, 9, 12, 13, 15, 16, 17 ]
 new tetraOfPoint: [ 4, 13, 12, 16, 10, 6, 16, 7, 2, 12 ]
----------------------------- Flip! -----------------------------
# flips: 4 # tetra: 17 # face: 36 # edge: 26
bfTetra:              [ (10, 3, 1, 2), (11, 10, 3, 5), (14, 10, 3, 1), (10, 5, 2, 0), (14, 5, 10, 1), (10, 1, 5, 0), (11, 2, 10, 5), (0, 11, 2, 3), (11, 3, 14, 5), (2, 0, 5, 11), (11, 3, 0, 14), (0, 1, 14, 3), (5, 0, 1, 14), (0, 14, 5, 11), (0, 10, 1, 2), (5, 10, 3, 14), (2, 10, 3, 11) ]
bfTetraToFace:        [ (0, 14, 13, 15), (11, 20, 35, 34), (15, 26, 33, 32), (5, 7, 31, 10), (12, 33, 25, 8), (4, 31, 30, 12), (10, 35, 19, 9), (21, 1, 18, 17), (27, 28, 20, 29), (16, 19, 17, 5), (24, 6, 29, 18), (26, 24, 2, 22), (22, 25, 23, 4), (28, 16, 6, 23), (14, 3, 7, 30), (32, 27, 8, 11), (34, 21, 9, 13) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 25, 17), (15, 12, 10, 9), (24, 21, 19, 12), (13, 4, 10, 11), (23, 8, 6, 1), (20, 24, 19, 10), (7, 13, 13, 10), (23, 7, 0, 6), (16, 25, 15, 11), (8, 10, 14, 1), (2, 16, 17, 5), (17, 22, 15, 21), (9, 20, 1, 8), (16, 6, 14, 15), (17, 14, 22, 2), (21, 18, 0, 18), (2, 19, 4, 21), (6, 7, 20, 0), (18, 19, 18, 6), (14, 20, 22, 15), (23, 0, 1, 13), (11, 3, 10, 9), (20, 12, 24, 21), (11, 5, 16, 12) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 1, 5), (0, 5, 2), (0, 14, 11), (2, 0, 10), (5, 10, 14), (2, 10, 11), (5, 2, 10), (5, 10, 3), (5, 10, 1), (2, 10, 3), (2, 10, 1), (3, 1, 10), (0, 5, 11), (0, 11, 2), (0, 11, 3), (5, 11, 2), (5, 11, 3), (2, 3, 11), (0, 1, 14), (0, 14, 5), (0, 14, 3), (1, 14, 5), (1, 14, 3), (5, 3, 14), (5, 11, 14), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (1, 14, 10), (3, 11, 10), (5, 11, 10) ]
bfFaceToTetra:        [ (0, 0), (0, 7), (11, 0), (0, 14), (5, 12), (3, 9), (13, 10), (14, 3), (15, 4), (16, 6), (6, 3), (1, 15), (4, 5), (0, 16), (14, 0), (2, 0), (9, 13), (9, 7), (7, 10), (6, 9), (8, 1), (7, 16), (12, 11), (12, 13), (10, 11), (4, 12), (11, 2), (8, 15), (8, 13), (10, 8), (14, 5), (3, 5), (2, 15), (2, 4), (1, 16), (1, 6) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (1, 5), (2, 5), (3, 5), (5, 10), (2, 10), (3, 10), (1, 10), (0, 11), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (5, 14), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10) ]
New buffer sizes: bftetra = 17, bfFace = 36, bfEdge = 26
Using these numFreedtetra = 0, numFreedFace = 0, numFreedEdge = 0
FreedTetra: []
FreedFaces: []
FreedEdges: []
(mark) bfActiveFaces:          [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 13, 13, 14, 15, 16, 17, 18 ]
#active: 18 (cpct) bfActiveFaces:[ 4, 5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27 ]
----------- check for flip: loop number 2 -----------
#active: 18 (cpct) bfActiveFaces:[ 4, 5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27 ]
                    bfFlipInfo: [ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 ]
#indtrmnd: 0  bfIndetrmndFaces: []
              final bfFlipInfo: [ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 ]
#bad: 3             bfBadFaces: [ 3, 11, 17 ]
                          bfFlipInfo: [ 000000000000010001100000, 000000000000001001001000, 000000000000011011100000 ]
                          bfFlipInfo: [ 000000000000010001100000, 000000000000001001001000, 000000000000011011100000 ]
#indtrmnd: 0 bfIndeterminedConvexity: []
      finalized convexity bfFlipInfo: [ 000000000000010001100000, 000000000000001001001000, 000000000000011011100000 ]
#nonCvx: 3       bfNonconvexBadFaces: [ 0, 1, 2 ]
                 ThreeTwo bfFlipInfo: [ 000000000001010001100000, 000000000000001001001000, 000000000001111011100000 ]
#indtrmnd: 0 IndtrmndBadFaceThreeTwo: []
           Final ThreeTwo bfFlipInfo: [ 000000000001010001100000, 000000000000001001001000, 000000000001111011100000 ]
                   bfTetraMarkedFlip: [ 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0 ]
 (13 GOOD) Final -Marked- bfFlipInfo: [ 000000000001010001000000, 000000000000001001000000, 000000000011111011100000 ]
bfFirstPrefixSum (3-2):            [ 0, 0, 1 ]
              final bfFlipInfo: [ 000000000001010001000000, 000000000000001001000000, 000000000011111011100000 ]
#flip: 1, 1 bfBadFacesToFlip: [ 2 ]
freedTetra: [ 1 ]
freedFaces: [ 11, 20 ]
freedEdges: [ 9 ]
---- relocating point in tetra involved in a flip: 
pointsToAdd:      [ 4, 6, 7, 8, 9, 12, 13, 15, 16, 17 ]
tetraOfPoint:     [ 4, 13, 12, 16, 10, 6, 16, 7, 2, 12 ]
PointInFlipMark:  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
PointInFlipSum:   [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
0 PointsInFlips:  []
----------------------------- Flip! -----------------------------
# flips: 1 # tetra: 16 # face: 34 # edge: 25
bfTetra:              [ (10, 3, 1, 2), (11, 10, 3, 5), (14, 10, 3, 1), (10, 5, 2, 0), (14, 5, 10, 1), (10, 1, 5, 0), (11, 2, 10, 5), (0, 11, 2, 3), (3, 14, 11, 10), (2, 0, 5, 11), (11, 3, 0, 14), (0, 1, 14, 3), (5, 0, 1, 14), (0, 14, 5, 11), (0, 10, 1, 2), (11, 10, 14, 5), (2, 10, 3, 11) ]
bfTetraToFace:        [ (0, 14, 13, 15), (11, 20, 35, 34), (15, 26, 33, 32), (5, 7, 31, 10), (12, 33, 25, 8), (4, 31, 30, 12), (10, 35, 19, 9), (21, 1, 18, 17), (27, 11, 10, 29), (16, 19, 17, 5), (24, 6, 29, 18), (26, 24, 2, 22), (22, 25, 23, 4), (28, 16, 6, 23), (14, 3, 7, 30), (8, 28, 0, 27), (34, 21, 9, 13) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 25, 17), (15, 12, 10, 9), (24, 21, 19, 12), (13, 4, 10, 11), (23, 8, 6, 1), (20, 24, 19, 10), (7, 13, 13, 10), (23, 7, 0, 6), (16, 25, 15, 11), (8, 10, 14, 1), (2, 16, 17, 5), (21, 17, 12, 22), (24, 10, 1, 8), (16, 6, 14, 15), (17, 14, 22, 2), (21, 18, 0, 18), (2, 19, 4, 21), (6, 7, 20, 0), (18, 19, 18, 6), (14, 20, 22, 15), (23, 0, 1, 13), (11, 3, 0, 22), (15, 24, 10, 20), (11, 5, 16, 12) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 1, 5), (0, 5, 2), (0, 14, 11), (2, 0, 10), (5, 10, 14), (2, 10, 11), (5, 2, 10), (5, 10, 3), (5, 10, 1), (2, 10, 3), (2, 10, 1), (3, 1, 10), (0, 5, 11), (0, 11, 2), (0, 11, 3), (5, 11, 2), (5, 11, 3), (2, 3, 11), (0, 1, 14), (0, 14, 5), (0, 14, 3), (1, 14, 5), (1, 14, 3), (11, 10, 14), (5, 11, 14), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (1, 14, 10), (3, 11, 10), (5, 11, 10) ]
bfFaceToTetra:        [ (15, 8), (0, 7), (11, 0), (0, 14), (5, 12), (3, 9), (13, 10), (14, 3), (15, 4), (16, 6), (8, 3), (1, 15), (4, 5), (0, 16), (14, 0), (2, 0), (9, 13), (9, 7), (7, 10), (6, 9), (8, 1), (7, 16), (12, 11), (12, 13), (10, 11), (4, 12), (11, 2), (8, 15), (8, 15), (10, 8), (14, 5), (3, 5), (2, 15), (2, 4), (1, 16), (1, 6) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (1, 5), (2, 5), (3, 5), (5, 10), (2, 10), (3, 10), (1, 10), (0, 11), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (5, 14), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10) ]
New buffer sizes: bftetra = 17, bfFace = 36, bfEdge = 26
Using these numFreedtetra = 1, numFreedFace = 2, numFreedEdge = 1
FreedTetra: [ 1 ]
FreedFaces: [ 11, 20 ]
FreedEdges: [ 9 ]
(mark) bfActiveFaces:          [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4 ]
#active: 4 (cpct) bfActiveFaces:[ 8, 10, 28, 29 ]
----------- check for flip: loop number 3 -----------
#active: 4 (cpct) bfActiveFaces:[ 8, 10, 28, 29 ]
                    bfFlipInfo: [ 0, 0, 2, 0 ]
#indtrmnd: 1  bfIndetrmndFaces: [ 2 ]
                    bfFlipInfo: [ 0, 0, 0, 0 ]
#indtrmnd: 0 bfIndetrmndFaces: []
              final bfFlipInfo: [ 0, 0, 0, 0 ]
#bad: 0             bfBadFaces: []
----------- check for split: loop number 3 -----------
----------------------------- DETERMINE SPLIT! -----------------------------
numPointsRemaining: 10 with 
pointsToAdd:      [ 4, 6, 7, 8, 9, 12, 13, 15, 16, 17 ]
tetraOfPoint:     [ 4, 13, 12, 16, 10, 6, 16, 7, 2, 12 ]
splittingTetraSum:[ 0, 0, 1, 1, 2, 2, 3, 4, 4, 4, 5, 5, 6, 7, 7, 7, 8 ]
pointIsSplitting: [ 1, 1, 1, 1, 1, 1, 0, 1, 1, 0 ]
SplittingTetra:   [ 2, 4, 6, 7, 10, 12, 13, 16 ]
tetIsSplitBy:     [ 16, 4, 12, 15, 9, 7, 6, 8 ]
tetraToSplit:     [ 0, 0, 1, 1, 2, 2, 3, 4, 4, 4, 5, 5, 6, 7, 7, 7 ]
New buffer sizes: bftetra = 40, bfFace = 82, bfEdge = 57
Using these numFreedtetra = 1, numFreedFace = 2, numFreedEdge = 1
FreedTetra: [ 1 ]
FreedFaces: [ 11, 20 ]
FreedEdges: [ 9 ]
----------------------------- SPLIT! -----------------------------
# tetra: 40 # face: 82 # edge: 57
bfTetra:              [ (10, 3, 1, 2), (14, 16, 3, 1), (16, 3, 1, 10), (10, 5, 2, 0), (4, 10, 1, 5), (10, 1, 5, 0), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (2, 0, 5, 11), (9, 0, 14, 3), (0, 1, 14, 3), (7, 1, 14, 0), (6, 5, 11, 14), (0, 10, 1, 2), (11, 10, 14, 5), (8, 3, 11, 10), (14, 10, 16, 1), (3, 14, 10, 16), (14, 4, 10, 1), (14, 5, 4, 1), (10, 14, 5, 4), (11, 12, 10, 5), (11, 2, 12, 5), (10, 11, 2, 12), (0, 15, 2, 3), (0, 11, 15, 3), (2, 0, 11, 15), (11, 9, 0, 14), (11, 3, 9, 14), (0, 11, 3, 9), (5, 7, 1, 14), (5, 0, 7, 14), (1, 5, 0, 7), (0, 6, 5, 11), (0, 14, 6, 11), (5, 0, 14, 6), (2, 8, 3, 11), (2, 10, 8, 11), (3, 2, 10, 8) ]
bfTetraToFace:        [ (0, 14, 13, 15), (39, 26, 36, 11), (15, 38, 37, 39), (5, 7, 31, 10), (12, 44, 43, 45), (4, 31, 30, 12), (10, 50, 49, 51), (21, 56, 55, 57), (27, 11, 10, 29), (16, 19, 17, 5), (24, 62, 61, 63), (26, 24, 2, 22), (22, 68, 67, 69), (28, 74, 73, 75), (14, 3, 7, 30), (8, 28, 0, 27), (34, 80, 79, 81), (38, 36, 33, 20), (20, 37, 11, 32), (45, 33, 42, 41), (44, 42, 25, 40), (40, 43, 41, 8), (51, 35, 48, 47), (50, 48, 19, 46), (46, 49, 47, 9), (57, 1, 54, 53), (56, 54, 18, 52), (52, 55, 53, 17), (63, 6, 60, 59), (62, 60, 29, 58), (58, 61, 59, 18), (69, 25, 66, 65), (68, 66, 23, 64), (64, 67, 65, 4), (75, 16, 72, 71), (74, 72, 6, 70), (70, 73, 71, 23), (81, 21, 78, 77), (80, 78, 9, 76), (76, 79, 77, 13) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 9, 21), (19, 27, 28, 4), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (31, 32, 30, 13), (10, 7, 13, 10), (23, 7, 0, 6), (35, 36, 34, 10), (11, 8, 39, 40), (38, 5, 16, 17), (21, 17, 12, 22), (24, 10, 1, 8), (16, 6, 14, 15), (43, 44, 42, 18), (2, 21, 0, 18), (2, 19, 4, 21), (47, 48, 46, 19), (0, 18, 51, 52), (50, 15, 20, 22), (23, 0, 1, 13), (11, 3, 0, 22), (15, 24, 10, 20), (55, 56, 54, 17), (12, 25, 24, 9), (19, 26, 13, 28), (21, 12, 27, 24), (9, 26, 29, 24), (19, 31, 32, 13), (20, 29, 19, 30), (7, 32, 24, 10), (31, 20, 29, 30), (33, 25, 15, 35), (36, 10, 16, 33), (15, 34, 8, 36), (25, 11, 35, 16), (33, 34, 37, 1), (2, 39, 40, 5), (14, 37, 2, 38), (17, 40, 1, 16), (39, 14, 37, 38), (41, 14, 22, 43), (44, 18, 17, 41), (22, 42, 21, 44), (14, 2, 43, 17), (41, 42, 45, 7), (20, 47, 48, 19), (6, 45, 20, 46), (18, 48, 7, 0), (47, 6, 45, 46), (49, 6, 14, 51), (52, 15, 18, 49), (14, 50, 22, 52), (6, 20, 51, 18), (49, 50, 53, 5), (16, 55, 56, 17), (11, 53, 16, 54), (25, 56, 5, 12), (55, 11, 53, 54) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 1, 5), (0, 5, 2), (0, 14, 11), (2, 0, 10), (5, 10, 14), (2, 10, 11), (5, 2, 10), (14, 16, 3), (5, 10, 1), (2, 10, 3), (2, 10, 1), (3, 1, 10), (0, 5, 11), (0, 11, 2), (0, 11, 3), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (0, 14, 5), (0, 14, 3), (1, 14, 5), (1, 14, 3), (11, 10, 14), (5, 11, 14), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (1, 14, 10), (3, 11, 10), (5, 11, 10), (14, 16, 1), (10, 16, 3), (10, 16, 1), (3, 1, 16), (14, 5, 4), (14, 4, 10), (14, 4, 1), (5, 4, 10), (5, 4, 1), (10, 1, 4), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (0, 11, 15), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (11, 3, 9), (11, 9, 0), (11, 9, 14), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (5, 7, 1), (5, 7, 14), (0, 7, 1), (0, 7, 14), (1, 14, 7), (0, 14, 6), (0, 6, 5), (0, 6, 11), (14, 6, 5), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (10, 8, 3), (10, 8, 11), (3, 11, 8) ]
bfFaceToTetra:        [ (15, 8), (0, 25), (11, 0), (0, 14), (5, 33), (3, 9), (35, 28), (14, 3), (15, 21), (38, 24), (6, 3), (18, 1), (4, 5), (0, 39), (14, 0), (2, 0), (9, 34), (9, 27), (26, 30), (23, 9), (18, 17), (7, 37), (12, 11), (32, 36), (10, 11), (20, 31), (11, 1), (8, 15), (13, 15), (29, 8), (14, 5), (3, 5), (2, 18), (17, 19), (16, 16), (1, 22), (1, 17), (2, 18), (17, 2), (1, 2), (21, 20), (21, 19), (19, 20), (4, 21), (20, 4), (19, 4), (24, 23), (24, 22), (22, 23), (6, 24), (23, 6), (22, 6), (27, 26), (27, 25), (25, 26), (7, 27), (26, 7), (25, 7), (30, 29), (30, 28), (28, 29), (10, 30), (29, 10), (28, 10), (33, 32), (33, 31), (31, 32), (12, 33), (32, 12), (31, 12), (36, 35), (36, 34), (34, 35), (13, 36), (35, 13), (34, 13), (39, 38), (39, 37), (37, 38), (16, 39), (38, 16), (37, 16) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (1, 5), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (0, 11), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (5, 14), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (1, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (11, 9), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (0, 6), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8) ]
------------ compacting pointsToAdd! ------------
bfPointsToAdd:          [ 4, 6, 7, 8, 9, 12, 13, 15, 16, 17 ]
bfPointIsSplitting:     [ 1, 1, 1, 1, 1, 1, 0, 1, 1, 0 ]
bfPrefixSum:            [ 0, 0, 0, 0, 0, 0, 1, 1, 1, 2 ]
New bfPointsToAdd:      [ 13, 17 ]
New TetOfPoints:        [ 39, 12 ]
bfLocations:        [ 
bad: 0 exp: 0*3^6 2*3^5 2*3^4 2*3^3 0*3^2 0*3^1 0*3^0 , 
bad: 0 exp: 0*3^6 0*3^5 0*3^4 0*3^3 0*3^2 0*3^1 2*3^0 
 ]
#bad: 0 bfBadPoints:[]
Final TetOfPoints:  [ 39, 12 ]
(mark) bfActiveFaces:           [ 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 1, 1, 2, 2, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 12, 13, 14, 15, 16, 17, 18, 18, 19, 20, 20, 20, 21, 22 ]
----------- check for flip: loop number 1 -----------
#active: 22 (cpct) bfActiveFaces:[ 4, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33 ]
                    bfFlipInfo: [ 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1 ]
#indtrmnd: 0  bfIndetrmndFaces: []
              final bfFlipInfo: [ 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1 ]
#bad: 9             bfBadFaces: [ 0, 1, 2, 3, 9, 10, 14, 16, 21 ]
                          bfFlipInfo: [ 000000000000010010000000, 000000000000001100000000, 000000000000010010000000, 000000000000000000000000, 000000000000000101010000, 000000000000000100000000, 000000000000000100000000, 000000000000001010000000, 000000000000001000000000 ]
                          bfFlipInfo: [ 000000000000010010000000, 000000000000001100000000, 000000000000010010000000, 000000000000000000000000, 000000000000000101010000, 000000000000000100000000, 000000000000000100000000, 000000000000001010000000, 000000000000001000000000 ]
#indtrmnd: 0 bfIndeterminedConvexity: []
      finalized convexity bfFlipInfo: [ 000000000000010010000000, 000000000000001100000000, 000000000000010010000000, 000000000000000000000000, 000000000000000101010000, 000000000000000100000000, 000000000000000100000000, 000000000000001010000000, 000000000000001000000000 ]
#nonCvx: 1       bfNonconvexBadFaces: [ 4 ]
                 ThreeTwo bfFlipInfo: [ 000000000000010010000000, 000000000000001100000000, 000000000000010010000000, 000000000000000000000000, 000000000000000101000000, 000000000000000100000000, 000000000000000100000000, 000000000000001010000000, 000000000000001000000000 ]
#indtrmnd: 0 IndtrmndBadFaceThreeTwo: []
           Final ThreeTwo bfFlipInfo: [ 000000000000010010000000, 000000000000001100000000, 000000000000010010000000, 000000000000000000000000, 000000000000000101000000, 000000000000000100000000, 000000000000000100000000, 000000000000001010000000, 000000000000001000000000 ]
                   bfTetraMarkedFlip: [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 9, 0, 9, 8, 3, 0, 0, 4, 0, 6, 0, 2, 0, 6, 8, 7, 1, 0, 2, 7, 0, 4, 0 ]
 (13 GOOD) Final -Marked- bfFlipInfo: [ 000000000010010010000000, 000000000010001100000000, 000000000010010010000000, 000000000010000000000000, 000000000000000101000000, 000000000010000100000000, 000000000010000100000000, 000000000010001010000000, 000000000010001000000000 ]
bfFirstPrefixSum (3-2):            [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
              final bfFlipInfo: [ 000000000010010010000000, 000000000010001100000000, 000000000010010010000000, 000000000010000000000000, 000000000000000101000000, 000000000010000100000000, 000000000010000100000000, 000000000010001010000000, 000000000010001000000000 ]
#flip: 8, 0 bfBadFacesToFlip: [ 0, 1, 2, 3, 5, 6, 7, 8 ]
---- relocating point in tetra involved in a flip: 
pointsToAdd:      [ 13, 17 ]
tetraOfPoint:     [ 39, 12 ]
PointInFlipMark:  [ 0, 0 ]
PointInFlipSum:   [ 0, 0 ]
0 PointsInFlips:  []
----------------------------- Flip! -----------------------------
# flips: 8 # tetra: 48 # face: 98 # edge: 65
bfTetra:              [ (10, 3, 1, 2), (14, 16, 3, 1), (16, 3, 1, 10), (10, 5, 2, 0), (4, 10, 1, 5), (10, 1, 5, 7), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (2, 0, 5, 11), (9, 0, 14, 3), (0, 1, 14, 3), (7, 1, 14, 0), (6, 5, 11, 14), (0, 10, 1, 2), (11, 10, 14, 4), (8, 3, 11, 10), (16, 1, 4, 10), (3, 14, 10, 16), (16, 1, 14, 4), (4, 1, 14, 7), (11, 14, 5, 4), (11, 12, 10, 5), (11, 2, 12, 5), (8, 11, 2, 12), (0, 15, 2, 3), (15, 9, 0, 11), (2, 0, 11, 15), (6, 11, 9, 14), (11, 3, 9, 14), (15, 3, 9, 11), (4, 14, 5, 7), (7, 6, 5, 0), (10, 5, 0, 7), (0, 6, 5, 11), (6, 9, 0, 14), (7, 14, 6, 0), (2, 8, 3, 11), (8, 11, 12, 10), (3, 2, 10, 8), (7, 10, 1, 0), (11, 9, 0, 6), (4, 11, 10, 5), (2, 12, 10, 8), (3, 9, 0, 15), (14, 6, 5, 7), (7, 4, 1, 5), (14, 4, 10, 16) ]
bfTetraToFace:        [ (0, 14, 13, 15), (39, 26, 36, 11), (15, 38, 37, 39), (5, 7, 31, 10), (12, 44, 43, 45), (65, 83, 82, 12), (10, 50, 49, 51), (21, 56, 55, 57), (27, 11, 10, 29), (16, 19, 17, 5), (24, 62, 61, 63), (26, 24, 2, 22), (22, 68, 67, 69), (28, 74, 73, 75), (14, 3, 7, 30), (41, 87, 86, 27), (34, 80, 79, 81), (45, 96, 38, 97), (20, 37, 11, 32), (42, 33, 97, 36), (69, 95, 94, 42), (40, 8, 87, 28), (51, 35, 48, 47), (50, 48, 19, 46), (46, 9, 89, 78), (57, 1, 54, 53), (59, 52, 91, 90), (52, 55, 53, 17), (60, 85, 74, 6), (62, 60, 29, 58), (58, 91, 56, 18), (66, 25, 95, 40), (71, 64, 93, 92), (64, 4, 83, 31), (75, 16, 72, 71), (63, 70, 85, 84), (70, 93, 68, 23), (81, 21, 78, 77), (47, 88, 80, 89), (76, 79, 77, 13), (30, 67, 4, 82), (84, 72, 6, 59), (0, 43, 8, 86), (88, 76, 9, 49), (90, 54, 18, 61), (92, 66, 23, 73), (44, 65, 25, 94), (96, 20, 33, 41) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 9, 21), (19, 27, 28, 4), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (31, 32, 30, 13), (10, 7, 13, 10), (57, 7, 47, 45), (35, 36, 34, 10), (11, 8, 39, 40), (38, 5, 16, 17), (21, 17, 12, 22), (24, 10, 1, 8), (16, 6, 14, 15), (43, 44, 42, 18), (2, 21, 0, 18), (2, 19, 4, 21), (47, 48, 46, 19), (0, 18, 51, 52), (50, 15, 20, 22), (23, 0, 1, 13), (11, 3, 0, 22), (59, 24, 31, 29), (55, 56, 54, 17), (12, 25, 28, 64), (26, 32, 13, 31), (21, 12, 27, 24), (9, 26, 28, 9), (64, 19, 32, 29), (32, 29, 63, 19), (47, 48, 22, 15), (59, 20, 29, 30), (33, 25, 15, 35), (36, 10, 16, 33), (15, 34, 8, 36), (56, 53, 60, 16), (33, 34, 37, 1), (2, 39, 40, 5), (61, 37, 38, 43), (41, 14, 1, 16), (39, 14, 37, 38), (52, 58, 50, 41), (22, 44, 17, 41), (22, 42, 21, 44), (40, 61, 38, 42), (17, 41, 29, 30), (63, 20, 48, 45), (62, 45, 46, 51), (49, 6, 10, 23), (57, 6, 45, 46), (49, 6, 14, 51), (52, 15, 58, 49), (50, 43, 44, 18), (48, 62, 46, 50), (18, 49, 53, 5), (16, 55, 56, 17), (56, 60, 54, 33), (25, 35, 5, 12), (55, 11, 53, 54), (57, 47, 46, 13), (23, 0, 41, 14), (52, 43, 58, 49), (59, 31, 30, 0), (15, 10, 34, 11), (53, 35, 60, 54), (42, 2, 40, 43), (61, 37, 50, 20), (48, 51, 62, 45), (63, 47, 45, 32), (30, 7, 29, 24), (9, 31, 64, 26) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 7, 10), (0, 5, 2), (11, 9, 6), (2, 0, 10), (5, 4, 11), (2, 12, 8), (5, 2, 10), (14, 16, 3), (5, 10, 1), (2, 10, 3), (2, 10, 1), (3, 1, 10), (0, 5, 11), (0, 11, 2), (3, 9, 15), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (14, 6, 7), (0, 14, 3), (5, 7, 4), (1, 14, 3), (11, 10, 14), (5, 11, 14), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (14, 4, 16), (3, 11, 10), (5, 11, 10), (14, 16, 1), (10, 16, 3), (10, 16, 1), (3, 1, 16), (14, 5, 4), (14, 4, 10), (14, 4, 1), (5, 4, 10), (5, 4, 1), (10, 1, 4), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (0, 11, 15), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (11, 3, 9), (11, 9, 0), (11, 9, 14), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (5, 7, 1), (5, 7, 14), (0, 7, 1), (0, 7, 14), (1, 14, 7), (0, 14, 6), (0, 6, 5), (0, 6, 11), (14, 6, 5), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (10, 8, 3), (10, 8, 11), (3, 11, 8), (1, 7, 10), (5, 7, 10), (0, 6, 9), (14, 6, 9), (10, 4, 11), (14, 4, 11), (10, 8, 12), (11, 12, 8), (0, 15, 9), (11, 15, 9), (5, 7, 6), (0, 7, 6), (1, 7, 4), (14, 7, 4), (10, 16, 4), (1, 4, 16) ]
bfFaceToTetra:        [ (42, 8), (0, 25), (11, 0), (0, 14), (40, 33), (3, 9), (41, 28), (14, 3), (42, 21), (43, 24), (6, 3), (18, 1), (4, 5), (0, 39), (14, 0), (2, 0), (9, 34), (9, 27), (44, 30), (23, 9), (18, 47), (7, 37), (12, 11), (45, 36), (10, 11), (46, 31), (11, 1), (8, 15), (13, 21), (29, 8), (40, 5), (3, 33), (2, 18), (47, 19), (16, 16), (1, 22), (1, 19), (2, 18), (17, 2), (1, 2), (21, 31), (15, 47), (19, 20), (4, 42), (46, 4), (17, 4), (24, 23), (38, 22), (22, 23), (6, 43), (23, 6), (22, 6), (27, 26), (27, 25), (25, 44), (7, 27), (30, 7), (25, 7), (30, 29), (26, 41), (28, 29), (10, 44), (29, 10), (35, 10), (33, 32), (5, 46), (31, 45), (12, 40), (36, 12), (20, 12), (36, 35), (32, 34), (34, 41), (13, 45), (28, 13), (34, 13), (39, 43), (39, 37), (37, 24), (16, 39), (38, 16), (37, 16), (40, 5), (33, 5), (35, 41), (35, 28), (42, 15), (21, 15), (38, 43), (24, 38), (26, 44), (26, 30), (32, 45), (32, 36), (46, 20), (31, 20), (17, 47), (19, 17) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (1, 5), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (0, 11), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (5, 14), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (1, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (11, 9), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (0, 6), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8), (10, 7), (6, 9), (11, 4), (8, 12), (15, 9), (7, 6), (4, 7), (16, 4) ]
New buffer sizes: bftetra = 48, bfFace = 98, bfEdge = 65
Using these numFreedtetra = 0, numFreedFace = 0, numFreedEdge = 0
FreedTetra: []
FreedFaces: []
FreedEdges: []
(mark) bfActiveFaces:          [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 6, 6, 6, 6, 6, 7, 7, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16, 17, 17, 17, 18, 18, 19, 19, 20, 20, 21, 22, 23, 24, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 36, 37, 37, 38, 38, 39, 39 ]
#active: 39 (cpct) bfActiveFaces:[ 12, 20, 27, 28, 30, 31, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80 ]
----------- check for flip: loop number 2 -----------
#active: 39 (cpct) bfActiveFaces:[ 12, 20, 27, 28, 30, 31, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80 ]
                    bfFlipInfo: [ 1, 0, 0, 1, 2, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1 ]
#indtrmnd: 1  bfIndetrmndFaces: [ 4 ]
                    bfFlipInfo: [ 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1 ]
#indtrmnd: 0 bfIndetrmndFaces: []
              final bfFlipInfo: [ 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1 ]
#bad: 14             bfBadFaces: [ 0, 3, 5, 9, 10, 12, 15, 17, 20, 26, 27, 31, 33, 38 ]
                          bfFlipInfo: [ 000000000000010011010000, 000000000000010101010000, 000000000000000101100000, 000000000000010101100000, 000000000000010000000000, 000000000000011101001000, 000000000000010011100000, 000000000000011010000000, 000000000000010000000000, 000000000000011011001000, 000000000000011100000000, 000000000000011000000000, 000000000000001100000000, 000000000000001001001000 ]
                          bfFlipInfo: [ 000000000000010011010000, 000000000000010101010000, 000000000000000101100000, 000000000000010101100000, 000000000000010000000000, 000000000000011101001000, 000000000000010011100000, 000000000000011010000000, 000000000000010000000000, 000000000000011011001000, 000000000000011100000000, 000000000000011000000000, 000000000000001100000000, 000000000000001001001000 ]
#indtrmnd: 0 bfIndeterminedConvexity: []
      finalized convexity bfFlipInfo: [ 000000000000010011010000, 000000000000010101010000, 000000000000000101100000, 000000000000010101100000, 000000000000010000000000, 000000000000011101001000, 000000000000010011100000, 000000000000011010000000, 000000000000010000000000, 000000000000011011001000, 000000000000011100000000, 000000000000011000000000, 000000000000001100000000, 000000000000001001001000 ]
#nonCvx: 8       bfNonconvexBadFaces: [ 0, 1, 2, 3, 5, 6, 9, 13 ]
                 ThreeTwo bfFlipInfo: [ 000000000001110011010000, 000000000000010101000000, 000000000000000101000000, 000000000000010101000000, 000000000000010000000000, 000000000000111101001000, 000000000000010011000000, 000000000000011010000000, 000000000000010000000000, 000000000001111011001000, 000000000000011100000000, 000000000000011000000000, 000000000000001100000000, 000000000000001001000000 ]
#indtrmnd: 0 IndtrmndBadFaceThreeTwo: []
           Final ThreeTwo bfFlipInfo: [ 000000000001110011010000, 000000000000010101000000, 000000000000000101000000, 000000000000010101000000, 000000000000010000000000, 000000000000111101001000, 000000000000010011000000, 000000000000011010000000, 000000000000010000000000, 000000000001111011001000, 000000000000011100000000, 000000000000011000000000, 000000000000001100000000, 000000000000001001000000 ]
                   bfTetraMarkedFlip: [ 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 8, 8, 0, 9, 9, 11, 0, 0, 13, 12, 12, 0, 0, 0, 0, 13, 0, 0, 0, 11, 10, 0 ]
 (13 GOOD) Final -Marked- bfFlipInfo: [ 000000000001110011000000, 000000000000010101000000, 000000000000000101000000, 000000000000010101000000, 000000000010010000000000, 000000000000111101000000, 000000000000010011000000, 000000000010011010000000, 000000000010010000000000, 000000000011111011001000, 000000000010011100000000, 000000000010011000000000, 000000000010001100000000, 000000000000001001000000 ]
bfFirstPrefixSum (3-2):            [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1 ]
              final bfFlipInfo: [ 000000000001110011000000, 000000000000010101000000, 000000000000000101000000, 000000000000010101000000, 000000000010010000000000, 000000000000111101000000, 000000000000010011000000, 000000000010011010000000, 000000000010010000000000, 000000000011111011001000, 000000000010011100000000, 000000000010011000000000, 000000000010001100000000, 000000000000001001000000 ]
#flip: 7, 1 bfBadFacesToFlip: [ 4, 7, 8, 9, 10, 11, 12 ]
freedTetra: [ 4 ]
freedFaces: [ 44, 12 ]
freedEdges: [ 7 ]
---- relocating point in tetra involved in a flip: 
pointsToAdd:      [ 13, 17 ]
tetraOfPoint:     [ 39, 12 ]
PointInFlipMark:  [ 0, 0 ]
PointInFlipSum:   [ 0, 0 ]
0 PointsInFlips:  []
----------------------------- Flip! -----------------------------
# flips: 7 # tetra: 53 # face: 108 # edge: 70
bfTetra:              [ (10, 3, 1, 2), (14, 16, 3, 1), (16, 3, 1, 10), (10, 5, 2, 0), (14, 7, 4, 16), (1, 7, 4, 10), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (2, 0, 5, 11), (9, 0, 14, 3), (0, 1, 14, 3), (7, 1, 14, 0), (6, 5, 11, 14), (0, 10, 1, 2), (11, 10, 14, 4), (8, 3, 11, 10), (16, 1, 4, 10), (3, 14, 10, 16), (16, 1, 7, 4), (16, 1, 14, 7), (11, 14, 5, 4), (11, 12, 10, 5), (11, 2, 12, 5), (8, 11, 2, 12), (0, 15, 2, 3), (2, 11, 15, 9), (2, 0, 11, 9), (6, 11, 9, 14), (15, 3, 9, 14), (15, 3, 14, 11), (4, 6, 5, 7), (7, 6, 5, 0), (10, 5, 0, 7), (5, 9, 0, 6), (7, 14, 6, 9), (7, 14, 9, 0), (2, 8, 3, 11), (8, 11, 12, 10), (3, 2, 10, 8), (7, 10, 1, 0), (5, 11, 9, 6), (4, 11, 10, 5), (2, 12, 10, 8), (3, 9, 0, 15), (4, 14, 6, 7), (7, 4, 10, 5), (14, 4, 10, 16), (9, 2, 0, 15), (9, 14, 11, 15), (14, 6, 5, 4), (6, 9, 0, 7), (11, 9, 0, 5) ]
bfTetraToFace:        [ (0, 14, 13, 15), (39, 26, 36, 11), (15, 38, 37, 39), (5, 7, 31, 10), (12, 33, 42, 95), (65, 45, 82, 94), (10, 50, 49, 51), (21, 56, 55, 57), (27, 11, 10, 29), (16, 19, 17, 5), (24, 62, 61, 63), (26, 24, 2, 22), (22, 68, 67, 69), (28, 74, 73, 75), (14, 3, 7, 30), (41, 87, 86, 27), (34, 80, 79, 81), (45, 96, 38, 97), (20, 37, 11, 32), (94, 12, 97, 44), (69, 42, 44, 36), (40, 8, 87, 28), (51, 35, 48, 47), (50, 48, 19, 46), (46, 9, 89, 78), (57, 1, 54, 53), (91, 52, 99, 55), (59, 99, 98, 17), (60, 85, 74, 6), (62, 58, 101, 18), (29, 100, 56, 101), (92, 25, 103, 102), (71, 64, 93, 92), (64, 4, 83, 31), (84, 71, 107, 106), (85, 70, 105, 23), (63, 104, 68, 105), (81, 21, 78, 77), (47, 88, 80, 89), (76, 79, 77, 13), (30, 67, 4, 82), (6, 107, 75, 72), (0, 43, 8, 86), (88, 76, 9, 49), (90, 54, 18, 61), (23, 103, 95, 66), (0, 83, 25, 65), (96, 20, 33, 41), (53, 90, 52, 98), (100, 91, 58, 60), (102, 40, 66, 73), (104, 93, 70, 84), (106, 16, 72, 59) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 9, 21), (19, 27, 28, 4), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (48, 29, 9, 63), (7, 64, 47, 32), (13, 63, 57, 31), (35, 36, 34, 10), (11, 8, 39, 40), (38, 5, 16, 17), (21, 17, 12, 22), (24, 10, 1, 8), (16, 6, 14, 15), (43, 44, 42, 18), (2, 21, 0, 18), (2, 19, 4, 21), (47, 48, 46, 19), (0, 18, 51, 52), (50, 15, 20, 22), (23, 0, 1, 13), (11, 3, 0, 22), (59, 24, 31, 29), (55, 56, 54, 17), (12, 25, 28, 64), (26, 32, 13, 31), (21, 12, 27, 24), (9, 26, 28, 7), (64, 47, 32, 63), (28, 9, 7, 19), (47, 48, 22, 15), (59, 20, 29, 30), (33, 25, 15, 35), (36, 10, 16, 33), (15, 34, 8, 36), (56, 53, 60, 16), (33, 34, 37, 1), (2, 39, 40, 5), (16, 39, 65, 38), (41, 61, 1, 16), (65, 14, 43, 41), (52, 58, 50, 41), (22, 44, 40, 61), (66, 42, 21, 44), (40, 66, 38, 21), (17, 22, 67, 30), (63, 51, 62, 45), (62, 45, 46, 51), (49, 6, 10, 23), (57, 6, 45, 46), (69, 6, 51, 43), (58, 49, 48, 62), (68, 50, 44, 58), (48, 68, 46, 44), (18, 43, 53, 5), (16, 55, 56, 17), (56, 60, 54, 33), (25, 35, 5, 12), (55, 11, 53, 54), (57, 47, 46, 13), (23, 0, 15, 69), (51, 41, 52, 58), (59, 31, 30, 0), (15, 10, 34, 11), (53, 35, 60, 54), (42, 2, 40, 43), (61, 37, 29, 67), (63, 50, 48, 62), (63, 57, 45, 0), (30, 10, 29, 24), (9, 31, 64, 26), (65, 43, 61, 1), (39, 37, 44, 41), (61, 22, 66, 38), (50, 20, 29, 51), (67, 30, 58, 49), (62, 43, 68, 46), (41, 14, 15, 43) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 7, 10), (0, 5, 2), (11, 9, 6), (2, 0, 10), (5, 4, 11), (2, 12, 8), (5, 2, 10), (14, 16, 3), (4, 16, 7), (2, 10, 3), (2, 10, 1), (3, 1, 10), (0, 5, 11), (0, 11, 2), (3, 9, 15), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (14, 6, 7), (0, 14, 3), (5, 7, 4), (1, 14, 3), (11, 10, 14), (5, 11, 14), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (14, 4, 16), (3, 11, 10), (5, 11, 10), (14, 16, 1), (10, 16, 3), (10, 16, 1), (3, 1, 16), (14, 5, 4), (14, 4, 10), (14, 7, 16), (5, 4, 10), (1, 7, 16), (10, 1, 4), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (15, 9, 2), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (9, 14, 15), (11, 9, 0), (11, 9, 14), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (7, 4, 10), (14, 6, 4), (0, 7, 1), (0, 7, 14), (1, 14, 7), (6, 9, 7), (0, 6, 5), (11, 9, 5), (14, 6, 5), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (10, 8, 3), (10, 8, 11), (3, 11, 8), (1, 7, 10), (5, 7, 10), (0, 6, 9), (14, 6, 9), (10, 4, 11), (14, 4, 11), (10, 8, 12), (11, 12, 8), (0, 15, 9), (11, 15, 9), (5, 7, 6), (0, 7, 6), (1, 7, 4), (14, 7, 4), (10, 16, 4), (1, 4, 16), (0, 9, 2), (11, 9, 2), (11, 15, 14), (3, 14, 15), (5, 4, 6), (7, 4, 6), (0, 7, 9), (14, 9, 7), (0, 5, 9), (6, 5, 9) ]
bfFaceToTetra:        [ (46, 5), (0, 25), (11, 0), (0, 14), (40, 33), (3, 9), (41, 28), (14, 3), (42, 21), (43, 24), (6, 3), (18, 1), (19, 4), (0, 39), (14, 0), (2, 0), (9, 52), (9, 27), (44, 29), (23, 9), (18, 47), (7, 37), (12, 11), (45, 35), (10, 11), (46, 31), (11, 1), (8, 15), (13, 21), (30, 8), (40, 5), (3, 33), (2, 18), (47, 4), (16, 16), (1, 22), (1, 20), (2, 18), (17, 2), (1, 2), (21, 50), (15, 47), (4, 20), (4, 42), (20, 19), (17, 4), (24, 23), (38, 22), (22, 23), (6, 43), (23, 6), (22, 6), (48, 26), (48, 25), (25, 44), (7, 26), (30, 7), (25, 7), (49, 29), (27, 52), (28, 49), (10, 44), (29, 10), (36, 10), (33, 32), (5, 46), (50, 45), (12, 40), (36, 12), (20, 12), (51, 35), (32, 34), (52, 41), (13, 50), (28, 13), (41, 13), (39, 43), (39, 37), (37, 24), (16, 39), (38, 16), (37, 16), (5, 5), (33, 46), (34, 51), (35, 28), (42, 15), (21, 15), (38, 43), (24, 38), (26, 48), (26, 49), (31, 45), (32, 51), (19, 5), (45, 4), (17, 47), (19, 17), (48, 27), (26, 27), (30, 49), (29, 30), (31, 50), (31, 45), (36, 51), (35, 36), (34, 52), (34, 41) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (16, 7), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (0, 11), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (5, 14), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (1, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (11, 9), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (0, 6), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8), (10, 7), (6, 9), (11, 4), (8, 12), (15, 9), (7, 6), (4, 7), (16, 4), (2, 9), (15, 14), (4, 6), (7, 9), (5, 9) ]
New buffer sizes: bftetra = 53, bfFace = 108, bfEdge = 70
Using these numFreedtetra = 0, numFreedFace = 0, numFreedEdge = 0
FreedTetra: []
FreedFaces: []
FreedEdges: []
(mark) bfActiveFaces:          [ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 12, 13, 13, 13, 14, 15, 15, 16, 17, 17, 17, 17, 17, 18, 19, 19, 20, 20, 21, 21, 22, 22, 22, 22, 22, 22, 22, 23, 24, 25, 26, 26, 26, 26, 26, 27, 28, 29, 30, 31, 32, 32, 33 ]
#active: 33 (cpct) bfActiveFaces:[ 6, 16, 17, 18, 23, 25, 29, 33, 36, 40, 53, 55, 56, 59, 60, 62, 63, 68, 69, 71, 73, 75, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 97 ]
----------- check for flip: loop number 3 -----------
#active: 33 (cpct) bfActiveFaces:[ 6, 16, 17, 18, 23, 25, 29, 33, 36, 40, 53, 55, 56, 59, 60, 62, 63, 68, 69, 71, 73, 75, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 97 ]
                    bfFlipInfo: [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 2, 0, 1, 0, 2, 0, 2, 1, 0, 1, 0 ]
#indtrmnd: 3  bfIndetrmndFaces: [ 22, 26, 28 ]
                    bfFlipInfo: [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0 ]
#indtrmnd: 0 bfIndetrmndFaces: []
              final bfFlipInfo: [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0 ]
#bad: 11             bfBadFaces: [ 1, 2, 9, 13, 14, 17, 19, 20, 24, 29, 31 ]
                          bfFlipInfo: [ 000000000000011011100000, 000000000000000101010000, 000000000000011101100000, 000000000000010101100000, 000000000000010100000000, 000000000000001000000000, 000000000000011001001000, 000000000000000011100000, 000000000000010001100000, 000000000000001011100000, 000000000000000001100000 ]
                          bfFlipInfo: [ 000000000000011011100000, 000000000000000101010000, 000000000000011101100000, 000000000000010101100000, 000000000000010100000000, 000000000000001000000000, 000000000000011001001000, 000000000000000011100000, 000000000000010001100000, 000000000000001011100000, 000000000000000001100000 ]
#indtrmnd: 0 bfIndeterminedConvexity: []
      finalized convexity bfFlipInfo: [ 000000000000011011100000, 000000000000000101010000, 000000000000011101100000, 000000000000010101100000, 000000000000010100000000, 000000000000001000000000, 000000000000011001001000, 000000000000000011100000, 000000000000010001100000, 000000000000001011100000, 000000000000000001100000 ]
#nonCvx: 9       bfNonconvexBadFaces: [ 0, 1, 2, 3, 6, 7, 8, 9, 10 ]
                 ThreeTwo bfFlipInfo: [ 000000000001011011100000, 000000000000000101010000, 000000000000011101100000, 000000000001010101100000, 000000000000010100000000, 000000000000001000000000, 000000000000011001001000, 000000000001000011100000, 000000000000010001100000, 000000000001101011100000, 000000000000000001000000 ]
#indtrmnd: 0 IndtrmndBadFaceThreeTwo: []
           Final ThreeTwo bfFlipInfo: [ 000000000001011011100000, 000000000000000101010000, 000000000000011101100000, 000000000001010101100000, 000000000000010100000000, 000000000000001000000000, 000000000000011001001000, 000000000001000011100000, 000000000000010001100000, 000000000001101011100000, 000000000000000001000000 ]
                   bfTetraMarkedFlip: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 6, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 4, 5, 0, 0, 0, 10, 0, 10, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 8, 10, 4 ]
 (13 GOOD) Final -Marked- bfFlipInfo: [ 000000000001011011000000, 000000000000000101000000, 000000000000011101000000, 000000000011010101100000, 000000000010010100000000, 000000000010001000000000, 000000000000011001000000, 000000000011000011100000, 000000000000010001000000, 000000000011101011100000, 000000000000000001000000 ]
bfFirstPrefixSum (3-2):            [ 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3 ]
              final bfFlipInfo: [ 000000000001011011000000, 000000000000000101000000, 000000000000011101000000, 000000000011010101100000, 000000000010010100000000, 000000000010001000000000, 000000000000011001000000, 000000000011000011100000, 000000000000010001000000, 000000000011101011100000, 000000000000000001000000 ]
#flip: 5, 3 bfBadFacesToFlip: [ 3, 4, 5, 7, 9 ]
freedTetra: [ 34, 21, 9 ]
freedFaces: [ 84, 71, 40, 28, 16, 17 ]
freedEdges: [ 49, 20, 14 ]
---- relocating point in tetra involved in a flip: 
pointsToAdd:      [ 13, 17 ]
tetraOfPoint:     [ 39, 12 ]
PointInFlipMark:  [ 0, 1 ]
PointInFlipSum:   [ 0, 1 ]
1 PointsInFlips:  [ 1 ]
--------------- relocating ---------------
(old) pointsToAdd: [ 13, 17 ]
 new tetraOfPoint: [ 39, 21 ]
#bad 0 bfBadPoints:[]
(old) pointsToAdd: [ 13, 17 ]
 new tetraOfPoint: [ 39, 21 ]
----------------------------- Flip! -----------------------------
# flips: 5 # tetra: 52 # face: 106 # edge: 69
bfTetra:              [ (10, 3, 1, 2), (14, 16, 3, 1), (16, 3, 1, 10), (10, 5, 2, 0), (14, 7, 4, 16), (1, 7, 4, 10), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (11, 15, 9, 6), (9, 0, 14, 3), (0, 1, 14, 3), (9, 0, 7, 1), (5, 4, 11, 6), (0, 10, 1, 2), (11, 10, 14, 4), (8, 3, 11, 10), (16, 1, 4, 10), (3, 14, 10, 16), (16, 1, 7, 4), (16, 1, 14, 7), (7, 1, 14, 9), (11, 12, 10, 5), (11, 2, 12, 5), (8, 11, 2, 12), (0, 15, 2, 3), (2, 11, 15, 9), (11, 9, 2, 5), (6, 15, 9, 14), (15, 3, 9, 14), (15, 3, 14, 11), (4, 6, 5, 7), (0, 7, 5, 9), (10, 5, 0, 7), (5, 9, 0, 6), (7, 14, 6, 9), (9, 0, 1, 14), (2, 8, 3, 11), (8, 11, 12, 10), (3, 2, 10, 8), (7, 10, 1, 0), (5, 11, 9, 6), (4, 11, 10, 5), (2, 12, 10, 8), (3, 9, 0, 15), (4, 14, 6, 7), (7, 4, 10, 5), (14, 4, 10, 16), (9, 2, 0, 15), (6, 11, 15, 14), (6, 4, 11, 14), (5, 9, 7, 6), (5, 9, 2, 0) ]
bfTetraToFace:        [ (0, 14, 13, 15), (39, 26, 36, 11), (15, 38, 37, 39), (5, 7, 31, 10), (12, 33, 42, 95), (65, 45, 82, 94), (10, 50, 49, 51), (21, 56, 55, 57), (27, 11, 10, 29), (17, 6, 60, 91), (24, 62, 61, 63), (26, 24, 2, 22), (67, 68, 40, 104), (73, 75, 102, 40), (14, 3, 7, 30), (41, 87, 86, 27), (34, 80, 79, 81), (45, 96, 38, 97), (20, 37, 11, 32), (94, 12, 97, 44), (69, 42, 44, 36), (28, 105, 68, 69), (51, 35, 48, 47), (50, 48, 19, 46), (46, 9, 89, 78), (57, 1, 54, 53), (91, 52, 99, 55), (59, 16, 72, 99), (58, 85, 16, 17), (62, 58, 101, 18), (29, 100, 56, 101), (92, 25, 103, 102), (93, 84, 58, 64), (64, 4, 83, 31), (84, 71, 107, 106), (85, 70, 105, 23), (22, 28, 63, 40), (81, 21, 78, 77), (47, 88, 80, 89), (76, 79, 77, 13), (30, 67, 4, 82), (6, 107, 75, 72), (0, 43, 8, 86), (88, 76, 9, 49), (90, 54, 18, 61), (23, 103, 95, 66), (0, 83, 25, 65), (96, 20, 33, 41), (53, 90, 52, 98), (100, 16, 74, 60), (0, 74, 66, 73), (70, 92, 0, 93), (98, 0, 106, 59) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 9, 21), (19, 27, 28, 4), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (48, 29, 9, 63), (7, 64, 47, 32), (13, 63, 57, 31), (35, 36, 34, 10), (11, 8, 39, 40), (38, 5, 16, 17), (21, 17, 12, 22), (24, 10, 38, 41), (52, 61, 14, 58), (43, 44, 42, 18), (2, 21, 0, 18), (2, 19, 4, 21), (43, 68, 20, 46), (0, 47, 30, 15), (51, 29, 67, 52), (23, 0, 1, 13), (11, 3, 0, 22), (59, 24, 31, 29), (55, 56, 54, 17), (12, 25, 28, 64), (26, 32, 13, 31), (21, 12, 27, 24), (9, 26, 28, 7), (64, 47, 32, 63), (28, 9, 7, 19), (47, 48, 47, 48), (68, 19, 20, 44), (33, 25, 15, 35), (36, 10, 16, 33), (15, 34, 8, 36), (56, 53, 60, 16), (33, 34, 37, 1), (2, 39, 40, 5), (16, 39, 65, 38), (41, 61, 41, 16), (15, 65, 69, 14), (14, 58, 50, 61), (66, 44, 40, 61), (66, 42, 21, 44), (40, 66, 38, 21), (17, 22, 67, 30), (63, 51, 62, 45), (46, 6, 43, 45), (68, 58, 10, 23), (57, 6, 45, 46), (69, 6, 51, 43), (58, 49, 48, 62), (68, 50, 44, 58), (43, 20, 44, 0), (18, 19, 53, 5), (16, 55, 56, 17), (56, 60, 54, 33), (25, 35, 5, 12), (55, 11, 53, 54), (57, 47, 46, 13), (23, 0, 15, 69), (51, 41, 52, 58), (59, 31, 30, 0), (15, 10, 34, 11), (53, 35, 60, 54), (42, 2, 40, 43), (61, 37, 29, 67), (63, 50, 48, 62), (63, 57, 45, 0), (30, 10, 29, 24), (9, 31, 64, 26), (65, 43, 61, 1), (39, 37, 52, 14), (50, 38, 22, 66), (67, 52, 50, 0), (29, 22, 0, 45), (51, 68, 58, 62), (69, 0, 6, 65) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 7, 10), (0, 5, 2), (11, 9, 6), (2, 0, 10), (5, 4, 11), (2, 12, 8), (5, 2, 10), (14, 16, 3), (4, 16, 7), (2, 10, 3), (2, 10, 1), (3, 1, 10), (14, 6, 15), (9, 6, 15), (3, 9, 15), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (14, 6, 7), (0, 14, 3), (5, 7, 4), (1, 14, 3), (11, 10, 14), (14, 9, 1), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (14, 4, 16), (3, 11, 10), (5, 11, 10), (14, 16, 1), (10, 16, 3), (10, 16, 1), (3, 1, 16), (0, 1, 9), (14, 4, 10), (14, 7, 16), (5, 4, 10), (1, 7, 16), (10, 1, 4), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (15, 9, 2), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (9, 14, 15), (5, 9, 2), (11, 15, 6), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (7, 4, 10), (14, 6, 4), (0, 7, 1), (7, 1, 9), (1, 14, 7), (6, 9, 7), (0, 6, 5), (11, 9, 5), (6, 4, 11), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (10, 8, 3), (10, 8, 11), (3, 11, 8), (1, 7, 10), (5, 7, 10), (0, 6, 9), (14, 6, 9), (10, 4, 11), (14, 4, 11), (10, 8, 12), (11, 12, 8), (0, 15, 9), (11, 15, 9), (5, 7, 6), (5, 9, 7), (1, 7, 4), (14, 7, 4), (10, 16, 4), (1, 4, 16), (0, 9, 2), (11, 9, 2), (11, 15, 14), (3, 14, 15), (5, 4, 6), (7, 4, 6), (0, 7, 9), (14, 9, 7), (0, 5, 9), (6, 5, 9) ]
bfFaceToTetra:        [ (50, 13), (0, 25), (11, 0), (0, 14), (40, 33), (3, 9), (41, 9), (14, 3), (42, 21), (43, 24), (6, 3), (18, 1), (19, 4), (0, 39), (14, 0), (2, 0), (28, 49), (28, 9), (44, 29), (23, 9), (18, 47), (7, 37), (36, 11), (45, 35), (10, 11), (46, 31), (11, 1), (8, 15), (36, 21), (30, 8), (40, 5), (3, 33), (2, 18), (47, 4), (16, 16), (1, 22), (1, 20), (2, 18), (17, 2), (1, 2), (12, 36), (15, 47), (4, 20), (4, 42), (20, 19), (17, 4), (24, 23), (38, 22), (22, 23), (6, 43), (23, 6), (22, 6), (48, 26), (48, 25), (25, 44), (7, 26), (30, 7), (25, 7), (28, 29), (27, 52), (9, 49), (10, 44), (29, 10), (36, 10), (33, 32), (5, 46), (50, 45), (12, 40), (21, 12), (20, 21), (51, 35), (32, 34), (27, 41), (13, 50), (49, 50), (41, 13), (39, 43), (39, 37), (37, 24), (16, 39), (38, 16), (37, 16), (5, 5), (33, 46), (34, 51), (35, 28), (42, 15), (21, 15), (38, 43), (24, 38), (26, 48), (26, 9), (31, 51), (32, 51), (19, 5), (45, 4), (17, 47), (19, 17), (52, 27), (26, 27), (49, 49), (29, 30), (13, 50), (31, 45), (36, 12), (35, 21), (52, 52), (34, 41) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (16, 7), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (6, 15), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (9, 1), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (1, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (11, 9), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (0, 6), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8), (10, 7), (6, 9), (11, 4), (8, 12), (15, 9), (7, 6), (4, 7), (16, 4), (2, 9), (15, 14), (4, 6), (7, 9), (5, 9) ]
New buffer sizes: bftetra = 53, bfFace = 108, bfEdge = 70
Using these numFreedtetra = 1, numFreedFace = 2, numFreedEdge = 1
FreedTetra: [ 34 ]
FreedFaces: [ 84, 71 ]
FreedEdges: [ 49 ]
(mark) bfActiveFaces:          [ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 15, 15, 15, 15, 15, 15, 16, 17, 18, 18, 19, 19, 20, 21, 22, 22 ]
#active: 22 (cpct) bfActiveFaces:[ 6, 22, 58, 63, 64, 66, 67, 69, 70, 72, 74, 75, 85, 91, 92, 98, 99, 100, 102, 104, 105, 106 ]
----------- check for flip: loop number 4 -----------
#active: 22 (cpct) bfActiveFaces:[ 6, 22, 58, 63, 64, 66, 67, 69, 70, 72, 74, 75, 85, 91, 92, 98, 99, 100, 102, 104, 105, 106 ]
                    bfFlipInfo: [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 2, 2, 0, 2 ]
#indtrmnd: 5  bfIndetrmndFaces: [ 15, 17, 18, 19, 21 ]
                    bfFlipInfo: [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 ]
#indtrmnd: 0 bfIndetrmndFaces: []
              final bfFlipInfo: [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 ]
#bad: 2             bfBadFaces: [ 0, 16 ]
                          bfFlipInfo: [ 000000000000011101100000, 000000000000000000000000 ]
                          bfFlipInfo: [ 000000000000011101100000, 000000000000000000000000 ]
#indtrmnd: 0 bfIndeterminedConvexity: []
      finalized convexity bfFlipInfo: [ 000000000000011101100000, 000000000000000000000000 ]
#nonCvx: 1       bfNonconvexBadFaces: [ 0 ]
                 ThreeTwo bfFlipInfo: [ 000000000000011101000000, 000000000000000000000000 ]
#indtrmnd: 0 IndtrmndBadFaceThreeTwo: []
           Final ThreeTwo bfFlipInfo: [ 000000000000011101000000, 000000000000000000000000 ]
                   bfTetraMarkedFlip: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
 (13 GOOD) Final -Marked- bfFlipInfo: [ 000000000000011101000000, 000000000010000000000000 ]
bfFirstPrefixSum (3-2):            [ 0, 0 ]
              final bfFlipInfo: [ 000000000000011101000000, 000000000010000000000000 ]
#flip: 1, 0 bfBadFacesToFlip: [ 1 ]
---- relocating point in tetra involved in a flip: 
pointsToAdd:      [ 13, 17 ]
tetraOfPoint:     [ 39, 21 ]
PointInFlipMark:  [ 0, 0 ]
PointInFlipSum:   [ 0, 0 ]
0 PointsInFlips:  []
----------------------------- Flip! -----------------------------
# flips: 1 # tetra: 53 # face: 108 # edge: 70
bfTetra:              [ (10, 3, 1, 2), (14, 16, 3, 1), (16, 3, 1, 10), (10, 5, 2, 0), (14, 7, 4, 16), (1, 7, 4, 10), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (11, 15, 9, 6), (9, 0, 14, 3), (0, 1, 14, 3), (9, 0, 7, 1), (5, 4, 11, 6), (0, 10, 1, 2), (11, 10, 14, 4), (8, 3, 11, 10), (16, 1, 4, 10), (3, 14, 10, 16), (16, 1, 7, 4), (16, 1, 14, 7), (7, 1, 14, 9), (11, 12, 10, 5), (11, 2, 12, 5), (8, 11, 2, 12), (0, 15, 2, 3), (15, 9, 5, 11), (15, 9, 2, 5), (6, 15, 9, 14), (15, 3, 9, 14), (15, 3, 14, 11), (4, 6, 5, 7), (0, 7, 5, 9), (10, 5, 0, 7), (2, 5, 11, 15), (7, 14, 6, 9), (9, 0, 1, 14), (2, 8, 3, 11), (8, 11, 12, 10), (3, 2, 10, 8), (7, 10, 1, 0), (5, 11, 9, 6), (4, 11, 10, 5), (2, 12, 10, 8), (3, 9, 0, 15), (4, 14, 6, 7), (7, 4, 10, 5), (14, 4, 10, 16), (9, 2, 0, 15), (6, 11, 15, 14), (6, 4, 11, 14), (5, 9, 7, 6), (5, 9, 2, 0) ]
bfTetraToFace:        [ (0, 14, 13, 15), (39, 26, 36, 11), (15, 38, 37, 39), (5, 7, 31, 10), (12, 33, 42, 95), (65, 45, 82, 94), (10, 50, 49, 51), (21, 56, 55, 57), (27, 11, 10, 29), (17, 6, 60, 91), (24, 62, 61, 63), (26, 24, 2, 22), (67, 68, 40, 104), (73, 75, 102, 40), (14, 3, 7, 30), (41, 87, 86, 27), (34, 80, 79, 81), (45, 96, 38, 97), (20, 37, 11, 32), (94, 12, 97, 44), (69, 42, 44, 36), (28, 105, 68, 69), (51, 35, 48, 47), (50, 48, 19, 46), (46, 9, 89, 78), (57, 1, 54, 53), (72, 71, 91, 84), (59, 99, 84, 52), (58, 85, 16, 17), (62, 58, 101, 18), (29, 100, 56, 101), (92, 25, 103, 102), (93, 84, 58, 64), (64, 4, 83, 31), (71, 55, 99, 16), (85, 70, 105, 23), (22, 28, 63, 40), (81, 21, 78, 77), (47, 88, 80, 89), (76, 79, 77, 13), (30, 67, 4, 82), (6, 107, 75, 72), (0, 43, 8, 86), (88, 76, 9, 49), (90, 54, 18, 61), (23, 103, 95, 66), (0, 83, 25, 65), (96, 20, 33, 41), (53, 90, 52, 98), (100, 16, 74, 60), (0, 74, 66, 73), (70, 92, 0, 93), (98, 0, 106, 59) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 9, 21), (19, 27, 28, 4), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (48, 29, 9, 63), (7, 64, 47, 32), (13, 63, 57, 31), (35, 36, 34, 10), (11, 8, 39, 40), (38, 5, 16, 17), (21, 17, 12, 22), (24, 10, 38, 41), (52, 61, 14, 58), (43, 44, 42, 18), (2, 21, 0, 18), (2, 19, 4, 21), (43, 68, 20, 46), (0, 47, 30, 15), (51, 29, 67, 52), (23, 0, 1, 13), (11, 3, 0, 22), (59, 24, 31, 29), (55, 56, 54, 17), (12, 25, 28, 64), (26, 32, 13, 31), (21, 12, 27, 24), (9, 26, 28, 7), (64, 47, 32, 63), (28, 9, 7, 19), (47, 48, 47, 48), (68, 19, 20, 44), (33, 25, 15, 35), (36, 10, 16, 33), (15, 34, 8, 36), (56, 53, 60, 16), (33, 34, 37, 1), (2, 39, 40, 5), (61, 49, 38, 69), (41, 15, 61, 39), (49, 65, 69, 14), (14, 58, 50, 61), (66, 44, 40, 61), (66, 42, 21, 44), (40, 66, 38, 21), (17, 22, 67, 30), (63, 51, 62, 45), (46, 6, 43, 45), (68, 58, 10, 23), (57, 6, 45, 46), (14, 16, 39, 15), (49, 38, 48, 62), (68, 50, 44, 58), (43, 20, 44, 0), (18, 19, 53, 5), (16, 55, 56, 17), (56, 60, 54, 33), (25, 35, 5, 12), (55, 11, 53, 54), (57, 47, 46, 13), (23, 0, 15, 69), (51, 41, 52, 58), (59, 31, 30, 0), (15, 10, 34, 11), (53, 35, 60, 54), (42, 2, 40, 43), (61, 37, 29, 67), (63, 50, 48, 62), (63, 57, 45, 0), (30, 10, 29, 24), (9, 31, 64, 26), (65, 43, 61, 1), (39, 37, 52, 14), (50, 38, 22, 66), (67, 52, 50, 0), (29, 22, 0, 45), (51, 68, 58, 62), (69, 0, 6, 65) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 7, 10), (0, 5, 2), (11, 9, 6), (2, 0, 10), (5, 4, 11), (2, 12, 8), (5, 2, 10), (14, 16, 3), (4, 16, 7), (2, 10, 3), (2, 10, 1), (3, 1, 10), (14, 6, 15), (9, 6, 15), (3, 9, 15), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (14, 6, 7), (0, 14, 3), (5, 7, 4), (1, 14, 3), (11, 10, 14), (14, 9, 1), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (14, 4, 16), (3, 11, 10), (5, 11, 10), (14, 16, 1), (10, 16, 3), (10, 16, 1), (3, 1, 16), (0, 1, 9), (14, 4, 10), (14, 7, 16), (5, 4, 10), (1, 7, 16), (10, 1, 4), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (15, 9, 2), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (9, 14, 15), (5, 9, 2), (11, 15, 6), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (7, 4, 10), (14, 6, 4), (0, 7, 1), (7, 1, 9), (1, 14, 7), (6, 9, 7), (11, 15, 5), (11, 9, 5), (6, 4, 11), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (10, 8, 3), (10, 8, 11), (3, 11, 8), (1, 7, 10), (5, 7, 10), (9, 5, 15), (14, 6, 9), (10, 4, 11), (14, 4, 11), (10, 8, 12), (11, 12, 8), (0, 15, 9), (11, 15, 9), (5, 7, 6), (5, 9, 7), (1, 7, 4), (14, 7, 4), (10, 16, 4), (1, 4, 16), (0, 9, 2), (2, 5, 15), (11, 15, 14), (3, 14, 15), (5, 4, 6), (7, 4, 6), (0, 7, 9), (14, 9, 7), (0, 5, 9), (6, 5, 9) ]
bfFaceToTetra:        [ (50, 13), (0, 25), (11, 0), (0, 14), (40, 33), (3, 9), (41, 9), (14, 3), (42, 21), (43, 24), (6, 3), (18, 1), (19, 4), (0, 39), (14, 0), (2, 0), (28, 34), (28, 9), (44, 29), (23, 9), (18, 47), (7, 37), (36, 11), (45, 35), (10, 11), (46, 31), (11, 1), (8, 15), (36, 21), (30, 8), (40, 5), (3, 33), (2, 18), (47, 4), (16, 16), (1, 22), (1, 20), (2, 18), (17, 2), (1, 2), (12, 36), (15, 47), (4, 20), (4, 42), (20, 19), (17, 4), (24, 23), (38, 22), (22, 23), (6, 43), (23, 6), (22, 6), (48, 27), (48, 25), (25, 44), (7, 34), (30, 7), (25, 7), (28, 29), (27, 52), (9, 49), (10, 44), (29, 10), (36, 10), (33, 32), (5, 46), (50, 45), (12, 40), (21, 12), (20, 21), (51, 35), (26, 34), (26, 41), (13, 50), (49, 50), (41, 13), (39, 43), (39, 37), (37, 24), (16, 39), (38, 16), (37, 16), (5, 5), (33, 46), (27, 26), (35, 28), (42, 15), (21, 15), (38, 43), (24, 38), (26, 48), (26, 9), (31, 51), (32, 51), (19, 5), (45, 4), (17, 47), (19, 17), (52, 27), (34, 27), (49, 49), (29, 30), (13, 50), (31, 45), (36, 12), (35, 21), (52, 52), (34, 41) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (16, 7), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (6, 15), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (9, 1), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (1, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (11, 9), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (15, 5), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8), (10, 7), (6, 9), (11, 4), (8, 12), (15, 9), (7, 6), (4, 7), (16, 4), (2, 9), (15, 14), (4, 6), (7, 9), (5, 9) ]
New buffer sizes: bftetra = 53, bfFace = 108, bfEdge = 70
Using these numFreedtetra = 0, numFreedFace = 0, numFreedEdge = 0
FreedTetra: []
FreedFaces: []
FreedEdges: []
(mark) bfActiveFaces:          [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ]
#active: 6 (cpct) bfActiveFaces:[ 16, 52, 55, 59, 72, 91 ]
----------- check for flip: loop number 5 -----------
#active: 6 (cpct) bfActiveFaces:[ 16, 52, 55, 59, 72, 91 ]
                    bfFlipInfo: [ 0, 1, 0, 1, 1, 1 ]
#indtrmnd: 0  bfIndetrmndFaces: []
              final bfFlipInfo: [ 0, 1, 0, 1, 1, 1 ]
#bad: 4             bfBadFaces: [ 1, 3, 4, 5 ]
                          bfFlipInfo: [ 000000000000000011010000, 000000000000010001010000, 000000000000010101010000, 000000000000000011100000 ]
                          bfFlipInfo: [ 000000000000000011010000, 000000000000010001010000, 000000000000010101010000, 000000000000000011100000 ]
#indtrmnd: 0 bfIndeterminedConvexity: []
      finalized convexity bfFlipInfo: [ 000000000000000011010000, 000000000000010001010000, 000000000000010101010000, 000000000000000011100000 ]
#nonCvx: 4       bfNonconvexBadFaces: [ 0, 1, 2, 3 ]
                 ThreeTwo bfFlipInfo: [ 000000000000100011010000, 000000000000010001000000, 000000000001010101010000, 000000000001000011100000 ]
#indtrmnd: 0 IndtrmndBadFaceThreeTwo: []
           Final ThreeTwo bfFlipInfo: [ 000000000000100011010000, 000000000000010001000000, 000000000001010101010000, 000000000001000011100000 ]
                   bfTetraMarkedFlip: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1 ]
 (13 GOOD) Final -Marked- bfFlipInfo: [ 000000000010100011010000, 000000000000010001000000, 000000000001010101000000, 000000000011000011100000 ]
bfFirstPrefixSum (3-2):            [ 1, 1, 1, 2 ]
              final bfFlipInfo: [ 000000000010100011010000, 000000000000010001000000, 000000000001010101000000, 000000000011000011100000 ]
#flip: 2, 2 bfBadFacesToFlip: [ 0, 3 ]
freedTetra: [ 41, 52 ]
freedFaces: [ 6, 72, 59, 98 ]
freedEdges: [ 41, 65 ]
---- relocating point in tetra involved in a flip: 
pointsToAdd:      [ 13, 17 ]
tetraOfPoint:     [ 39, 21 ]
PointInFlipMark:  [ 0, 0 ]
PointInFlipSum:   [ 0, 0 ]
0 PointsInFlips:  []
----------------------------- Flip! -----------------------------
# flips: 2 # tetra: 51 # face: 104 # edge: 68
bfTetra:              [ (10, 3, 1, 2), (14, 16, 3, 1), (16, 3, 1, 10), (10, 5, 2, 0), (14, 7, 4, 16), (1, 7, 4, 10), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (15, 6, 5, 11), (9, 0, 14, 3), (0, 1, 14, 3), (9, 0, 7, 1), (5, 4, 11, 6), (0, 10, 1, 2), (11, 10, 14, 4), (8, 3, 11, 10), (16, 1, 4, 10), (3, 14, 10, 16), (16, 1, 7, 4), (16, 1, 14, 7), (7, 1, 14, 9), (11, 12, 10, 5), (11, 2, 12, 5), (8, 11, 2, 12), (0, 15, 2, 3), (9, 6, 5, 15), (0, 5, 15, 9), (6, 15, 9, 14), (15, 3, 9, 14), (15, 3, 14, 11), (4, 6, 5, 7), (0, 7, 5, 9), (10, 5, 0, 7), (2, 5, 11, 15), (7, 14, 6, 9), (9, 0, 1, 14), (2, 8, 3, 11), (8, 11, 12, 10), (3, 2, 10, 8), (7, 10, 1, 0), (5, 11, 9, 6), (4, 11, 10, 5), (2, 12, 10, 8), (3, 9, 0, 15), (4, 14, 6, 7), (7, 4, 10, 5), (14, 4, 10, 16), (2, 0, 5, 15), (6, 11, 15, 14), (6, 4, 11, 14), (5, 9, 7, 6), (5, 9, 2, 0) ]
bfTetraToFace:        [ (0, 14, 13, 15), (39, 26, 36, 11), (15, 38, 37, 39), (5, 7, 31, 10), (12, 33, 42, 95), (65, 45, 82, 94), (10, 50, 49, 51), (21, 56, 55, 57), (27, 11, 10, 29), (0, 71, 60, 91), (24, 62, 61, 63), (26, 24, 2, 22), (67, 68, 40, 104), (73, 75, 102, 40), (14, 3, 7, 30), (41, 87, 86, 27), (34, 80, 79, 81), (45, 96, 38, 97), (20, 37, 11, 32), (94, 12, 97, 44), (69, 42, 44, 36), (28, 105, 68, 69), (51, 35, 48, 47), (50, 48, 19, 46), (46, 9, 89, 78), (57, 1, 54, 53), (91, 84, 17, 6), (84, 90, 0, 52), (58, 85, 16, 17), (62, 58, 101, 18), (29, 100, 56, 101), (92, 25, 103, 102), (93, 84, 58, 64), (64, 4, 83, 31), (71, 55, 99, 16), (85, 70, 105, 23), (22, 28, 63, 40), (81, 21, 78, 77), (47, 88, 80, 89), (76, 79, 77, 13), (30, 67, 4, 82), (6, 107, 75, 72), (0, 43, 8, 86), (88, 76, 9, 49), (90, 54, 18, 61), (23, 103, 95, 66), (0, 83, 25, 65), (96, 20, 33, 41), (52, 99, 53, 99), (100, 16, 74, 60), (0, 74, 66, 73), (70, 92, 0, 93), (98, 0, 106, 59) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 9, 21), (19, 27, 28, 4), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (48, 29, 9, 63), (7, 64, 47, 32), (13, 63, 57, 31), (35, 36, 34, 10), (11, 8, 39, 40), (38, 5, 16, 17), (21, 17, 12, 22), (24, 10, 14, 49), (38, 0, 52, 15), (43, 44, 42, 18), (2, 21, 0, 18), (2, 19, 4, 21), (43, 68, 20, 46), (0, 47, 30, 15), (51, 29, 67, 52), (23, 0, 1, 13), (11, 3, 0, 22), (59, 24, 31, 29), (55, 56, 54, 17), (12, 25, 28, 64), (26, 32, 13, 31), (21, 12, 27, 24), (9, 26, 28, 7), (64, 47, 32, 63), (28, 9, 7, 19), (47, 48, 47, 48), (68, 19, 20, 44), (33, 25, 15, 35), (36, 10, 16, 33), (15, 34, 8, 36), (56, 53, 60, 16), (33, 34, 37, 1), (2, 39, 40, 5), (58, 69, 61, 52), (14, 49, 0, 37), (43, 49, 69, 61), (14, 58, 50, 61), (66, 44, 40, 61), (66, 42, 21, 44), (40, 66, 38, 21), (17, 22, 67, 30), (63, 51, 62, 45), (46, 6, 43, 45), (68, 58, 10, 23), (57, 6, 45, 46), (14, 16, 39, 15), (49, 38, 48, 62), (68, 50, 44, 58), (43, 20, 44, 0), (18, 19, 53, 5), (16, 55, 56, 17), (56, 60, 54, 33), (25, 35, 5, 12), (55, 11, 53, 54), (57, 47, 46, 13), (23, 0, 15, 69), (51, 41, 52, 58), (59, 31, 30, 0), (15, 10, 34, 11), (53, 35, 60, 54), (42, 2, 40, 43), (61, 37, 29, 67), (63, 50, 48, 62), (63, 57, 45, 0), (30, 10, 29, 24), (9, 31, 64, 26), (1, 14, 39, 49), (37, 49, 52, 14), (50, 38, 22, 66), (67, 52, 50, 0), (29, 22, 0, 45), (51, 68, 58, 62), (69, 0, 6, 65) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 7, 10), (0, 5, 2), (11, 9, 6), (2, 0, 10), (5, 4, 11), (2, 12, 8), (5, 2, 10), (14, 16, 3), (4, 16, 7), (2, 10, 3), (2, 10, 1), (3, 1, 10), (14, 6, 15), (9, 6, 15), (3, 9, 15), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (14, 6, 7), (0, 14, 3), (5, 7, 4), (1, 14, 3), (11, 10, 14), (14, 9, 1), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (14, 4, 16), (3, 11, 10), (5, 11, 10), (14, 16, 1), (10, 16, 3), (10, 16, 1), (3, 1, 16), (0, 1, 9), (14, 4, 10), (14, 7, 16), (5, 4, 10), (1, 7, 16), (10, 1, 4), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (0, 5, 15), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (9, 14, 15), (5, 9, 2), (11, 15, 6), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (7, 4, 10), (14, 6, 4), (0, 7, 1), (7, 1, 9), (1, 14, 7), (6, 9, 7), (11, 15, 5), (11, 9, 5), (6, 4, 11), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (10, 8, 3), (10, 8, 11), (3, 11, 8), (1, 7, 10), (5, 7, 10), (9, 5, 15), (14, 6, 9), (10, 4, 11), (14, 4, 11), (10, 8, 12), (11, 12, 8), (0, 15, 9), (15, 6, 5), (5, 7, 6), (5, 9, 7), (1, 7, 4), (14, 7, 4), (10, 16, 4), (1, 4, 16), (0, 9, 2), (2, 5, 15), (11, 15, 14), (3, 14, 15), (5, 4, 6), (7, 4, 6), (0, 7, 9), (14, 9, 7), (0, 5, 9), (6, 5, 9) ]
bfFaceToTetra:        [ (9, 26), (0, 25), (11, 0), (0, 14), (40, 33), (3, 9), (41, 9), (14, 3), (42, 21), (43, 24), (6, 3), (18, 1), (19, 4), (0, 39), (14, 0), (2, 0), (28, 34), (26, 9), (44, 29), (23, 9), (18, 47), (7, 37), (36, 11), (45, 35), (10, 11), (46, 31), (11, 1), (8, 15), (36, 21), (30, 8), (40, 5), (3, 33), (2, 18), (47, 4), (16, 16), (1, 22), (1, 20), (2, 18), (17, 2), (1, 2), (12, 36), (15, 47), (4, 20), (4, 42), (20, 19), (17, 4), (24, 23), (38, 22), (22, 23), (6, 43), (23, 6), (22, 6), (48, 27), (48, 25), (25, 44), (7, 34), (30, 7), (25, 7), (28, 29), (27, 52), (9, 49), (10, 44), (29, 10), (36, 10), (33, 32), (5, 46), (50, 45), (12, 40), (21, 12), (20, 21), (51, 35), (26, 9), (26, 41), (13, 50), (49, 50), (41, 13), (39, 43), (39, 37), (37, 24), (16, 39), (38, 16), (37, 16), (5, 5), (33, 46), (27, 26), (35, 28), (42, 15), (21, 15), (38, 43), (24, 38), (26, 27), (26, 9), (31, 51), (32, 51), (19, 5), (45, 4), (17, 47), (19, 17), (52, 27), (34, 48), (49, 49), (29, 30), (13, 50), (31, 45), (36, 12), (35, 21), (52, 52), (34, 41) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (16, 7), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (6, 15), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (9, 1), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (1, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (11, 9), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (15, 5), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8), (10, 7), (6, 9), (11, 4), (8, 12), (15, 9), (7, 6), (4, 7), (16, 4), (2, 9), (15, 14), (4, 6), (7, 9), (5, 9) ]
New buffer sizes: bftetra = 53, bfFace = 108, bfEdge = 70
Using these numFreedtetra = 2, numFreedFace = 4, numFreedEdge = 2
FreedTetra: [ 41, 52 ]
FreedFaces: [ 6, 72, 59, 98 ]
FreedEdges: [ 41, 65 ]
(mark) bfActiveFaces:          [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7 ]
#active: 7 (cpct) bfActiveFaces:[ 17, 53, 60, 71, 84, 90, 99 ]
----------- check for flip: loop number 6 -----------
#active: 7 (cpct) bfActiveFaces:[ 17, 53, 60, 71, 84, 90, 99 ]
                    bfFlipInfo: [ 2, 0, 0, 2, 0, 2, 0 ]
#indtrmnd: 3  bfIndetrmndFaces: [ 0, 3, 5 ]
                    bfFlipInfo: [ 0, 0, 0, 0, 0, 0, 0 ]
#indtrmnd: 0 bfIndetrmndFaces: []
              final bfFlipInfo: [ 0, 0, 0, 0, 0, 0, 0 ]
#bad: 0             bfBadFaces: []
----------- check for split: loop number 4 -----------
----------------------------- DETERMINE SPLIT! -----------------------------
numPointsRemaining: 2 with 
pointsToAdd:      [ 13, 17 ]
tetraOfPoint:     [ 39, 21 ]
splittingTetraSum:[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ]
pointIsSplitting: [ 1, 1 ]
SplittingTetra:   [ 21, 39 ]
tetIsSplitBy:     [ 17, 13 ]
tetraToSplit:     [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ]
New buffer sizes: bftetra = 57, bfFace = 116, bfEdge = 76
Using these numFreedtetra = 2, numFreedFace = 4, numFreedEdge = 2
FreedTetra: [ 41, 52 ]
FreedFaces: [ 6, 72, 59, 98 ]
FreedEdges: [ 41, 65 ]
----------------------------- SPLIT! -----------------------------
# tetra: 57 # face: 116 # edge: 76
bfTetra:              [ (10, 3, 1, 2), (14, 16, 3, 1), (16, 3, 1, 10), (10, 5, 2, 0), (14, 7, 4, 16), (1, 7, 4, 10), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (15, 6, 5, 11), (9, 0, 14, 3), (0, 1, 14, 3), (9, 0, 7, 1), (5, 4, 11, 6), (0, 10, 1, 2), (11, 10, 14, 4), (8, 3, 11, 10), (16, 1, 4, 10), (3, 14, 10, 16), (16, 1, 7, 4), (16, 1, 14, 7), (17, 14, 9, 1), (11, 12, 10, 5), (11, 2, 12, 5), (8, 11, 2, 12), (0, 15, 2, 3), (9, 6, 5, 15), (0, 5, 15, 9), (6, 15, 9, 14), (15, 3, 9, 14), (15, 3, 14, 11), (4, 6, 5, 7), (0, 7, 5, 9), (10, 5, 0, 7), (2, 5, 11, 15), (7, 14, 6, 9), (9, 0, 1, 14), (2, 8, 3, 11), (8, 11, 12, 10), (13, 10, 8, 2), (7, 10, 1, 0), (7, 1, 17, 9), (4, 11, 10, 5), (2, 12, 10, 8), (3, 9, 0, 15), (4, 14, 6, 7), (7, 4, 10, 5), (14, 4, 10, 16), (2, 0, 5, 15), (6, 11, 15, 14), (6, 4, 11, 14), (5, 9, 7, 6), (7, 17, 14, 9), (14, 7, 1, 17), (3, 13, 10, 8), (3, 2, 13, 8), (10, 3, 2, 13) ]
bfTetraToFace:        [ (0, 14, 13, 15), (39, 26, 36, 11), (15, 38, 37, 39), (5, 7, 31, 10), (12, 33, 42, 95), (65, 45, 82, 94), (10, 50, 49, 51), (21, 56, 55, 57), (27, 11, 10, 29), (0, 71, 60, 91), (24, 62, 61, 63), (26, 24, 2, 22), (67, 68, 40, 104), (73, 75, 102, 40), (14, 3, 7, 30), (41, 87, 86, 27), (34, 80, 79, 81), (45, 96, 38, 97), (20, 37, 11, 32), (94, 12, 97, 44), (69, 42, 44, 36), (28, 108, 6, 109), (51, 35, 48, 47), (50, 48, 19, 46), (46, 9, 89, 78), (57, 1, 54, 53), (91, 84, 17, 6), (84, 90, 0, 52), (58, 85, 16, 17), (62, 58, 101, 18), (29, 100, 56, 101), (92, 25, 103, 102), (93, 84, 58, 64), (64, 4, 83, 31), (71, 55, 99, 16), (85, 70, 105, 23), (22, 28, 63, 40), (81, 21, 78, 77), (47, 88, 80, 89), (76, 114, 113, 115), (30, 67, 4, 82), (108, 72, 68, 98), (0, 43, 8, 86), (88, 76, 9, 49), (90, 54, 18, 61), (23, 103, 95, 66), (0, 83, 25, 65), (96, 20, 33, 41), (52, 99, 53, 99), (100, 16, 74, 60), (0, 74, 66, 73), (70, 92, 0, 93), (109, 105, 72, 59), (98, 6, 59, 69), (115, 79, 112, 111), (114, 112, 77, 110), (110, 113, 111, 13) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 9, 21), (19, 27, 28, 4), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (48, 29, 9, 63), (7, 64, 47, 32), (13, 63, 57, 31), (35, 36, 34, 10), (11, 8, 39, 40), (38, 5, 16, 17), (21, 17, 12, 22), (24, 10, 14, 49), (38, 0, 52, 15), (43, 44, 42, 18), (2, 21, 0, 18), (2, 19, 4, 21), (43, 68, 20, 46), (0, 47, 30, 15), (51, 29, 67, 52), (23, 0, 1, 13), (11, 3, 0, 22), (59, 24, 31, 29), (55, 56, 54, 17), (12, 25, 28, 64), (26, 32, 13, 31), (21, 12, 27, 24), (9, 26, 28, 7), (64, 47, 32, 63), (28, 9, 7, 19), (47, 48, 70, 71), (41, 44, 19, 20), (33, 25, 15, 35), (36, 10, 16, 33), (15, 34, 8, 36), (56, 53, 60, 16), (33, 34, 37, 1), (2, 39, 40, 5), (58, 69, 61, 52), (14, 49, 0, 37), (43, 49, 69, 61), (14, 58, 50, 61), (66, 44, 40, 61), (66, 42, 21, 44), (40, 66, 38, 21), (17, 22, 67, 30), (63, 51, 62, 45), (46, 6, 43, 45), (68, 58, 10, 23), (57, 6, 45, 46), (14, 16, 39, 15), (49, 38, 48, 62), (68, 50, 44, 58), (43, 20, 44, 0), (18, 19, 53, 5), (16, 55, 56, 17), (56, 60, 54, 33), (25, 35, 74, 75), (73, 54, 11, 53), (57, 47, 46, 13), (23, 0, 47, 65), (68, 41, 20, 71), (59, 31, 30, 0), (15, 10, 34, 11), (53, 35, 60, 54), (42, 2, 40, 43), (61, 37, 29, 67), (63, 50, 48, 62), (63, 57, 45, 0), (30, 10, 29, 24), (9, 31, 64, 26), (1, 14, 39, 49), (37, 49, 52, 14), (50, 38, 22, 66), (67, 52, 50, 0), (29, 22, 0, 45), (51, 68, 58, 62), (65, 48, 68, 70), (71, 44, 48, 19), (70, 47, 65, 41), (72, 12, 55, 74), (75, 54, 5, 72), (55, 73, 53, 75), (12, 11, 74, 5) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 7, 10), (0, 5, 2), (1, 17, 14), (2, 0, 10), (5, 4, 11), (2, 12, 8), (5, 2, 10), (14, 16, 3), (4, 16, 7), (2, 10, 3), (2, 10, 1), (3, 1, 10), (14, 6, 15), (9, 6, 15), (3, 9, 15), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (14, 6, 7), (0, 14, 3), (5, 7, 4), (1, 14, 3), (11, 10, 14), (14, 9, 1), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (14, 4, 16), (3, 11, 10), (5, 11, 10), (14, 16, 1), (10, 16, 3), (10, 16, 1), (3, 1, 16), (0, 1, 9), (14, 4, 10), (14, 7, 16), (5, 4, 10), (1, 7, 16), (10, 1, 4), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (0, 5, 15), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (9, 14, 15), (7, 17, 14), (11, 15, 6), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (7, 4, 10), (14, 6, 4), (0, 7, 1), (7, 1, 9), (1, 14, 7), (6, 9, 7), (11, 15, 5), (7, 17, 9), (6, 4, 11), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (10, 8, 3), (10, 8, 11), (3, 11, 8), (1, 7, 10), (5, 7, 10), (9, 5, 15), (14, 6, 9), (10, 4, 11), (14, 4, 11), (10, 8, 12), (11, 12, 8), (0, 15, 9), (15, 6, 5), (5, 7, 6), (5, 9, 7), (1, 7, 4), (14, 7, 4), (10, 16, 4), (1, 4, 16), (7, 1, 17), (2, 5, 15), (11, 15, 14), (3, 14, 15), (5, 4, 6), (7, 4, 6), (0, 7, 9), (14, 9, 7), (0, 5, 9), (6, 5, 9), (1, 17, 9), (14, 9, 17), (3, 2, 13), (3, 13, 10), (3, 13, 8), (2, 13, 10), (2, 13, 8), (10, 8, 13) ]
bfFaceToTetra:        [ (9, 26), (0, 25), (11, 0), (0, 14), (40, 33), (3, 9), (21, 53), (14, 3), (42, 21), (43, 24), (6, 3), (18, 1), (19, 4), (0, 56), (14, 0), (2, 0), (28, 34), (26, 9), (44, 29), (23, 9), (18, 47), (7, 37), (36, 11), (45, 35), (10, 11), (46, 31), (11, 1), (8, 15), (21, 21), (30, 8), (40, 5), (3, 33), (2, 18), (47, 4), (16, 16), (1, 22), (1, 20), (2, 18), (17, 2), (1, 2), (12, 36), (15, 47), (4, 20), (4, 42), (20, 19), (17, 4), (24, 23), (38, 22), (22, 23), (6, 43), (23, 6), (22, 6), (48, 27), (48, 25), (25, 44), (7, 34), (30, 7), (25, 7), (28, 29), (53, 52), (9, 49), (10, 44), (29, 10), (36, 10), (33, 32), (5, 46), (50, 45), (12, 40), (41, 12), (20, 53), (51, 35), (26, 9), (52, 41), (13, 50), (49, 50), (41, 13), (39, 43), (55, 37), (37, 24), (16, 54), (38, 16), (37, 16), (5, 5), (33, 46), (27, 26), (35, 28), (42, 15), (21, 15), (38, 43), (24, 38), (26, 27), (26, 9), (31, 51), (32, 51), (19, 5), (45, 4), (17, 47), (19, 17), (53, 41), (34, 48), (49, 49), (29, 30), (13, 50), (31, 45), (36, 12), (35, 52), (52, 52), (34, 41), (41, 21), (52, 21), (56, 55), (56, 54), (54, 55), (39, 56), (55, 39), (54, 39) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (16, 7), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (6, 15), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (9, 1), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (1, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (1, 17), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (15, 5), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8), (10, 7), (6, 9), (11, 4), (8, 12), (15, 9), (7, 6), (4, 7), (16, 4), (7, 17), (15, 14), (4, 6), (7, 9), (5, 9), (14, 17), (9, 17), (3, 13), (2, 13), (10, 13), (8, 13) ]
(mark) bfActiveFaces:           [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4, 5, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7 ]
----------- check for flip: loop number 1 -----------
#active: 7 (cpct) bfActiveFaces:[ 13, 28, 68, 69, 76, 77, 79 ]
                    bfFlipInfo: [ 0, 2, 1, 1, 0, 1, 1 ]
#indtrmnd: 1  bfIndetrmndFaces: [ 1 ]
                    bfFlipInfo: [ 0, 0, 1, 1, 0, 1, 1 ]
#indtrmnd: 0 bfIndetrmndFaces: []
              final bfFlipInfo: [ 0, 0, 1, 1, 0, 1, 1 ]
#bad: 4             bfBadFaces: [ 2, 3, 5, 6 ]
                          bfFlipInfo: [ 000000000000001100000000, 000000000000010100000000, 000000000000000001010000, 000000000000001010000000 ]
                          bfFlipInfo: [ 000000000000001100000000, 000000000000010100000000, 000000000000000001010000, 000000000000001010000000 ]
#indtrmnd: 0 bfIndeterminedConvexity: []
      finalized convexity bfFlipInfo: [ 000000000000001100000000, 000000000000010100000000, 000000000000000001010000, 000000000000001010000000 ]
#nonCvx: 1       bfNonconvexBadFaces: [ 2 ]
                 ThreeTwo bfFlipInfo: [ 000000000000001100000000, 000000000000010100000000, 000000000000000001000000, 000000000000001010000000 ]
#indtrmnd: 0 IndtrmndBadFaceThreeTwo: []
           Final ThreeTwo bfFlipInfo: [ 000000000000001100000000, 000000000000010100000000, 000000000000000001000000, 000000000000001010000000 ]
                   bfTetraMarkedFlip: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 0, 0 ]
 (13 GOOD) Final -Marked- bfFlipInfo: [ 000000000010001100000000, 000000000010010100000000, 000000000000000001000000, 000000000010001010000000 ]
bfFirstPrefixSum (3-2):            [ 0, 0, 0, 0 ]
              final bfFlipInfo: [ 000000000010001100000000, 000000000010010100000000, 000000000000000001000000, 000000000010001010000000 ]
#flip: 3, 0 bfBadFacesToFlip: [ 0, 1, 3 ]
----------------------------- Flip! -----------------------------
# flips: 3 # tetra: 60 # face: 122 # edge: 79
bfTetra:              [ (10, 3, 1, 2), (14, 16, 3, 1), (16, 3, 1, 10), (10, 5, 2, 0), (14, 7, 4, 16), (1, 7, 4, 10), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (15, 6, 5, 11), (9, 0, 14, 3), (0, 1, 14, 3), (17, 9, 0, 1), (5, 4, 11, 6), (0, 10, 1, 2), (11, 10, 14, 4), (11, 10, 8, 13), (16, 1, 4, 10), (3, 14, 10, 16), (16, 1, 7, 4), (16, 17, 14, 7), (17, 14, 9, 1), (11, 12, 10, 5), (11, 2, 12, 5), (8, 11, 2, 12), (0, 15, 2, 3), (9, 6, 5, 15), (0, 5, 15, 9), (6, 15, 9, 14), (15, 3, 9, 14), (15, 3, 14, 11), (4, 6, 5, 7), (0, 7, 5, 9), (10, 5, 0, 7), (2, 5, 11, 15), (7, 14, 6, 9), (9, 0, 1, 14), (2, 8, 3, 11), (8, 11, 12, 10), (13, 10, 8, 2), (7, 10, 1, 0), (17, 0, 7, 1), (4, 11, 10, 5), (2, 12, 10, 8), (3, 9, 0, 15), (4, 14, 6, 7), (7, 4, 10, 5), (14, 4, 10, 16), (2, 0, 5, 15), (6, 11, 15, 14), (6, 4, 11, 14), (5, 9, 7, 6), (7, 17, 14, 9), (16, 1, 17, 7), (11, 8, 3, 13), (3, 2, 13, 8), (10, 3, 2, 13), (9, 0, 7, 17), (1, 17, 14, 16), (13, 11, 10, 3) ]
bfTetraToFace:        [ (0, 14, 13, 15), (39, 26, 36, 11), (15, 38, 37, 39), (5, 7, 31, 10), (12, 33, 42, 95), (65, 45, 82, 94), (10, 50, 49, 51), (21, 56, 55, 57), (27, 11, 10, 29), (0, 71, 60, 91), (24, 62, 61, 63), (26, 24, 2, 22), (40, 117, 108, 68), (73, 75, 102, 40), (14, 3, 7, 30), (41, 87, 86, 27), (115, 121, 120, 80), (45, 96, 38, 97), (20, 37, 11, 32), (94, 12, 97, 44), (59, 42, 119, 118), (28, 108, 6, 109), (51, 35, 48, 47), (50, 48, 19, 46), (46, 9, 89, 78), (57, 1, 54, 53), (91, 84, 17, 6), (84, 90, 0, 52), (58, 85, 16, 17), (62, 58, 101, 18), (29, 100, 56, 101), (92, 25, 103, 102), (93, 84, 58, 64), (64, 4, 83, 31), (71, 55, 99, 16), (85, 70, 105, 23), (22, 28, 63, 40), (81, 21, 78, 77), (47, 88, 80, 89), (76, 114, 113, 115), (30, 67, 4, 82), (67, 98, 117, 116), (0, 43, 8, 86), (88, 76, 9, 49), (90, 54, 18, 61), (23, 103, 95, 66), (0, 83, 25, 65), (96, 20, 33, 41), (52, 99, 53, 99), (100, 16, 74, 60), (0, 74, 66, 73), (70, 92, 0, 93), (109, 105, 72, 59), (98, 119, 44, 69), (112, 79, 121, 81), (114, 112, 77, 110), (110, 113, 111, 13), (116, 72, 68, 104), (118, 36, 69, 6), (34, 111, 79, 120) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 9, 21), (19, 27, 28, 4), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (48, 29, 9, 63), (7, 64, 47, 32), (13, 63, 57, 31), (35, 36, 34, 10), (11, 8, 39, 40), (38, 5, 16, 17), (21, 17, 12, 22), (24, 10, 14, 49), (38, 0, 52, 15), (43, 44, 42, 18), (2, 21, 0, 18), (2, 19, 4, 21), (71, 76, 41, 43), (20, 0, 30, 15), (51, 29, 67, 52), (23, 0, 1, 13), (11, 3, 0, 22), (59, 24, 31, 29), (25, 56, 78, 54), (74, 75, 28, 64), (26, 32, 13, 31), (21, 12, 27, 24), (9, 26, 28, 7), (64, 47, 32, 63), (77, 9, 7, 70), (65, 48, 70, 71), (41, 44, 19, 20), (33, 25, 15, 35), (36, 10, 16, 33), (15, 34, 8, 36), (56, 53, 60, 16), (33, 34, 37, 1), (2, 39, 40, 5), (58, 69, 61, 52), (14, 49, 0, 37), (43, 49, 69, 61), (14, 58, 50, 61), (66, 44, 40, 61), (66, 42, 21, 44), (40, 66, 38, 21), (17, 22, 67, 30), (63, 51, 62, 45), (46, 6, 43, 45), (68, 58, 10, 23), (57, 6, 45, 46), (14, 16, 39, 15), (49, 38, 48, 62), (68, 50, 44, 58), (43, 20, 44, 0), (18, 19, 53, 5), (16, 55, 56, 17), (56, 60, 54, 33), (25, 35, 74, 75), (73, 54, 11, 53), (57, 47, 46, 13), (23, 0, 76, 65), (41, 46, 0, 47), (59, 31, 30, 0), (15, 10, 34, 11), (53, 35, 60, 54), (42, 2, 40, 43), (61, 37, 29, 67), (63, 50, 48, 62), (63, 57, 45, 0), (30, 10, 29, 24), (9, 31, 64, 26), (1, 14, 39, 49), (37, 49, 52, 14), (50, 38, 22, 66), (67, 52, 50, 0), (29, 22, 0, 45), (51, 68, 58, 62), (65, 48, 68, 70), (71, 44, 28, 77), (7, 41, 47, 65), (56, 17, 78, 55), (75, 72, 5, 72), (55, 73, 53, 75), (12, 11, 74, 5), (72, 73, 43, 68), (71, 46, 76, 65), (41, 19, 28, 70), (77, 9, 78, 74), (72, 25, 17, 12) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 7, 10), (0, 5, 2), (1, 17, 14), (2, 0, 10), (5, 4, 11), (2, 12, 8), (5, 2, 10), (14, 16, 3), (4, 16, 7), (2, 10, 3), (2, 10, 1), (3, 1, 10), (14, 6, 15), (9, 6, 15), (3, 9, 15), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (14, 6, 7), (0, 14, 3), (5, 7, 4), (1, 14, 3), (11, 10, 14), (14, 9, 1), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (14, 4, 16), (3, 11, 10), (5, 11, 10), (14, 16, 1), (10, 16, 3), (10, 16, 1), (3, 1, 16), (0, 1, 9), (14, 4, 10), (14, 7, 16), (5, 4, 10), (1, 7, 16), (10, 1, 4), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (0, 5, 15), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (9, 14, 15), (7, 17, 14), (11, 15, 6), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (7, 4, 10), (14, 6, 4), (0, 7, 1), (9, 0, 17), (1, 17, 16), (6, 9, 7), (11, 15, 5), (7, 17, 9), (6, 4, 11), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (3, 13, 11), (10, 8, 11), (3, 11, 8), (1, 7, 10), (5, 7, 10), (9, 5, 15), (14, 6, 9), (10, 4, 11), (14, 4, 11), (10, 8, 12), (11, 12, 8), (0, 15, 9), (15, 6, 5), (5, 7, 6), (5, 9, 7), (1, 7, 4), (14, 7, 4), (10, 16, 4), (1, 4, 16), (7, 1, 17), (2, 5, 15), (11, 15, 14), (3, 14, 15), (5, 4, 6), (7, 4, 6), (0, 7, 9), (14, 9, 7), (0, 5, 9), (6, 5, 9), (1, 17, 9), (14, 9, 17), (3, 2, 13), (3, 13, 10), (3, 13, 8), (2, 13, 10), (2, 13, 8), (10, 8, 13), (7, 17, 0), (1, 17, 0), (14, 16, 17), (7, 16, 17), (10, 13, 11), (8, 13, 11) ]
bfFaceToTetra:        [ (9, 26), (0, 25), (11, 0), (0, 14), (40, 33), (3, 9), (21, 58), (14, 3), (42, 21), (43, 24), (6, 3), (18, 1), (19, 4), (0, 56), (14, 0), (2, 0), (28, 34), (26, 9), (44, 29), (23, 9), (18, 47), (7, 37), (36, 11), (45, 35), (10, 11), (46, 31), (11, 1), (8, 15), (21, 21), (30, 8), (40, 5), (3, 33), (2, 18), (47, 4), (59, 16), (1, 22), (1, 58), (2, 18), (17, 2), (1, 2), (12, 36), (15, 47), (4, 20), (4, 42), (53, 19), (17, 4), (24, 23), (38, 22), (22, 23), (6, 43), (23, 6), (22, 6), (48, 27), (48, 25), (25, 44), (7, 34), (30, 7), (25, 7), (28, 29), (20, 52), (9, 49), (10, 44), (29, 10), (36, 10), (33, 32), (5, 46), (50, 45), (41, 40), (57, 12), (58, 53), (51, 35), (26, 9), (52, 57), (13, 50), (49, 50), (41, 13), (39, 43), (55, 37), (37, 24), (59, 54), (38, 16), (37, 54), (5, 5), (33, 46), (27, 26), (35, 28), (42, 15), (21, 15), (38, 43), (24, 38), (26, 27), (26, 9), (31, 51), (32, 51), (19, 5), (45, 4), (17, 47), (19, 17), (53, 41), (34, 48), (49, 49), (29, 30), (13, 50), (31, 45), (36, 57), (35, 52), (52, 52), (34, 41), (12, 21), (52, 21), (56, 55), (56, 59), (54, 55), (39, 56), (55, 39), (16, 39), (41, 57), (41, 12), (20, 58), (20, 53), (59, 16), (54, 16) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (16, 7), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (6, 15), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (9, 1), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (1, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (1, 17), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (15, 5), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8), (10, 7), (6, 9), (11, 4), (8, 12), (15, 9), (7, 6), (4, 7), (16, 4), (7, 17), (15, 14), (4, 6), (7, 9), (5, 9), (14, 17), (9, 17), (3, 13), (2, 13), (10, 13), (8, 13), (17, 0), (16, 17), (11, 13) ]
New buffer sizes: bftetra = 60, bfFace = 122, bfEdge = 79
Using these numFreedtetra = 0, numFreedFace = 0, numFreedEdge = 0
FreedTetra: []
FreedFaces: []
FreedEdges: []
(mark) bfActiveFaces:          [ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15, 16, 16, 16, 17 ]
#active: 17 (cpct) bfActiveFaces:[ 6, 34, 36, 40, 42, 44, 59, 67, 72, 80, 81, 98, 104, 108, 111, 112, 115 ]
----------- check for flip: loop number 2 -----------
#active: 17 (cpct) bfActiveFaces:[ 6, 34, 36, 40, 42, 44, 59, 67, 72, 80, 81, 98, 104, 108, 111, 112, 115 ]
                    bfFlipInfo: [ 0, 2, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0 ]
#indtrmnd: 1  bfIndetrmndFaces: [ 1 ]
                    bfFlipInfo: [ 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0 ]
#indtrmnd: 0 bfIndetrmndFaces: []
              final bfFlipInfo: [ 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0 ]
#bad: 7             bfBadFaces: [ 2, 3, 5, 9, 10, 13, 15 ]
                          bfFlipInfo: [ 000000000000001100000000, 000000000000010011100000, 000000000000000100000000, 000000000000000001001000, 000000000000010001010000, 000000000000001001001000, 000000000000011001010000 ]
                          bfFlipInfo: [ 000000000000001100000000, 000000000000010011100000, 000000000000000100000000, 000000000000000001001000, 000000000000010001010000, 000000000000001001001000, 000000000000011001010000 ]
#indtrmnd: 0 bfIndeterminedConvexity: []
      finalized convexity bfFlipInfo: [ 000000000000001100000000, 000000000000010011100000, 000000000000000100000000, 000000000000000001001000, 000000000000010001010000, 000000000000001001001000, 000000000000011001010000 ]
#nonCvx: 5       bfNonconvexBadFaces: [ 1, 3, 4, 5, 6 ]
                 ThreeTwo bfFlipInfo: [ 000000000000001100000000, 000000000001110011100000, 000000000000000100000000, 000000000000000001000000, 000000000001010001000000, 000000000000001001000000, 000000000000111001000000 ]
#indtrmnd: 0 IndtrmndBadFaceThreeTwo: []
           Final ThreeTwo bfFlipInfo: [ 000000000000001100000000, 000000000001110011100000, 000000000000000100000000, 000000000000000001000000, 000000000001010001000000, 000000000000001001000000, 000000000000111001000000 ]
                   bfTetraMarkedFlip: [ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 1, 0 ]
 (13 GOOD) Final -Marked- bfFlipInfo: [ 000000000010001100000000, 000000000011110011100000, 000000000010000100000000, 000000000000000001000000, 000000000001010001000000, 000000000000001001000000, 000000000000111001000000 ]
bfFirstPrefixSum (3-2):            [ 0, 1, 1, 1, 1, 1, 1 ]
              final bfFlipInfo: [ 000000000010001100000000, 000000000011110011100000, 000000000010000100000000, 000000000000000001000000, 000000000001010001000000, 000000000000001001000000, 000000000000111001000000 ]
#flip: 3, 1 bfBadFacesToFlip: [ 0, 1, 2 ]
freedTetra: [ 21 ]
freedFaces: [ 28, 108 ]
freedEdges: [ 20 ]
----------------------------- Flip! -----------------------------
# flips: 3 # tetra: 61 # face: 124 # edge: 80
bfTetra:              [ (10, 3, 1, 2), (3, 17, 14, 16), (16, 3, 1, 10), (10, 5, 2, 0), (14, 7, 4, 16), (1, 7, 4, 10), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (15, 6, 5, 11), (9, 0, 14, 3), (0, 1, 14, 3), (9, 0, 17, 14), (5, 4, 11, 6), (0, 10, 1, 2), (11, 10, 14, 4), (11, 10, 8, 13), (16, 1, 4, 10), (3, 14, 10, 16), (17, 7, 4, 1), (16, 17, 14, 7), (1, 17, 14, 3), (11, 12, 10, 5), (11, 2, 12, 5), (8, 11, 2, 12), (0, 15, 2, 3), (9, 6, 5, 15), (0, 5, 15, 9), (6, 15, 9, 14), (15, 3, 9, 14), (15, 3, 14, 11), (4, 6, 5, 7), (0, 7, 5, 9), (10, 5, 0, 7), (2, 5, 11, 15), (7, 14, 6, 9), (17, 14, 0, 1), (2, 8, 3, 11), (8, 11, 12, 10), (13, 10, 8, 2), (7, 10, 1, 0), (17, 0, 7, 1), (4, 11, 10, 5), (2, 12, 10, 8), (3, 9, 0, 15), (4, 14, 6, 7), (7, 4, 10, 5), (14, 4, 10, 16), (2, 0, 5, 15), (6, 11, 15, 14), (6, 4, 11, 14), (5, 9, 7, 6), (7, 17, 14, 9), (17, 4, 16, 1), (11, 8, 3, 13), (3, 2, 13, 8), (10, 3, 2, 13), (9, 0, 7, 17), (3, 1, 17, 16), (13, 11, 10, 3), (7, 4, 16, 17) ]
bfTetraToFace:        [ (0, 14, 13, 15), (118, 11, 28, 108), (15, 38, 37, 39), (5, 7, 31, 10), (12, 33, 42, 95), (65, 45, 82, 94), (10, 50, 49, 51), (21, 56, 55, 57), (27, 11, 10, 29), (0, 71, 60, 91), (24, 62, 61, 63), (26, 24, 2, 22), (40, 109, 19, 68), (73, 75, 102, 40), (14, 3, 7, 30), (41, 87, 86, 27), (115, 121, 120, 80), (45, 96, 38, 97), (20, 37, 11, 32), (94, 123, 98, 44), (59, 42, 119, 118), (108, 26, 36, 6), (51, 35, 48, 47), (50, 48, 19, 46), (46, 9, 89, 78), (57, 1, 54, 53), (91, 84, 17, 6), (84, 90, 0, 52), (58, 85, 16, 17), (62, 58, 101, 18), (29, 100, 56, 101), (92, 25, 103, 102), (93, 84, 58, 64), (64, 4, 83, 31), (71, 55, 99, 16), (85, 70, 105, 23), (22, 117, 0, 40), (81, 21, 78, 77), (47, 88, 80, 89), (76, 114, 113, 115), (30, 67, 4, 82), (67, 98, 117, 116), (0, 43, 8, 86), (88, 76, 9, 49), (90, 54, 18, 61), (23, 103, 95, 66), (0, 83, 25, 65), (96, 20, 33, 41), (52, 99, 53, 99), (100, 16, 74, 60), (0, 74, 66, 73), (70, 92, 0, 93), (109, 105, 72, 59), (97, 69, 123, 122), (112, 79, 121, 81), (114, 112, 77, 110), (110, 113, 111, 13), (116, 72, 68, 104), (69, 28, 39, 36), (34, 111, 79, 120), (122, 119, 44, 12) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 20, 21), (27, 70, 77, 9), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (48, 29, 9, 63), (7, 64, 47, 32), (13, 63, 57, 31), (35, 36, 34, 10), (11, 8, 39, 40), (38, 5, 16, 17), (21, 17, 12, 22), (24, 10, 14, 49), (38, 0, 52, 15), (43, 44, 42, 18), (2, 21, 0, 18), (2, 19, 4, 21), (43, 71, 44, 76), (18, 70, 30, 15), (51, 29, 67, 52), (23, 0, 1, 13), (11, 3, 0, 22), (59, 24, 31, 29), (25, 56, 78, 54), (74, 75, 28, 64), (26, 32, 13, 31), (21, 12, 27, 24), (9, 26, 65, 79), (41, 63, 47, 32), (77, 9, 7, 70), (65, 48, 41, 19), (4, 70, 20, 21), (33, 25, 15, 35), (36, 10, 16, 33), (15, 34, 8, 36), (56, 53, 60, 16), (33, 34, 37, 1), (2, 39, 40, 5), (58, 69, 61, 52), (14, 49, 0, 37), (43, 49, 69, 61), (14, 58, 50, 61), (66, 44, 40, 61), (66, 42, 21, 44), (40, 66, 38, 21), (17, 22, 67, 30), (63, 51, 62, 45), (46, 6, 43, 45), (68, 58, 10, 23), (57, 6, 45, 46), (14, 16, 39, 15), (49, 38, 48, 62), (68, 50, 44, 58), (0, 76, 41, 18), (19, 0, 53, 5), (16, 55, 56, 17), (56, 60, 54, 33), (25, 35, 74, 75), (73, 54, 11, 53), (57, 47, 46, 13), (23, 0, 76, 65), (41, 46, 0, 47), (59, 31, 30, 0), (15, 10, 34, 11), (53, 35, 60, 54), (42, 2, 40, 43), (61, 37, 29, 67), (63, 50, 48, 62), (63, 57, 45, 0), (30, 10, 29, 24), (9, 31, 64, 26), (1, 14, 39, 49), (37, 49, 52, 14), (50, 38, 22, 66), (67, 52, 50, 0), (29, 22, 0, 45), (51, 68, 58, 62), (65, 48, 68, 70), (71, 44, 79, 77), (41, 64, 32, 28), (56, 17, 78, 55), (75, 72, 5, 72), (55, 73, 53, 75), (12, 11, 74, 5), (72, 73, 43, 68), (71, 46, 76, 65), (4, 20, 27, 41), (28, 77, 78, 74), (72, 25, 17, 12), (63, 7, 65, 64) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 7, 10), (0, 5, 2), (1, 17, 14), (2, 0, 10), (5, 4, 11), (2, 12, 8), (5, 2, 10), (14, 16, 3), (4, 16, 7), (2, 10, 3), (2, 10, 1), (3, 1, 10), (14, 6, 15), (9, 6, 15), (3, 9, 15), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (14, 6, 7), (0, 14, 3), (5, 7, 4), (1, 14, 3), (11, 10, 14), (16, 3, 17), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (14, 4, 16), (3, 11, 10), (5, 11, 10), (1, 17, 3), (10, 16, 3), (10, 16, 1), (3, 1, 16), (17, 14, 0), (14, 4, 10), (14, 7, 16), (5, 4, 10), (7, 4, 17), (10, 1, 4), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (0, 5, 15), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (9, 14, 15), (7, 17, 14), (11, 15, 6), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (7, 4, 10), (14, 6, 4), (0, 7, 1), (9, 0, 17), (1, 17, 16), (6, 9, 7), (11, 15, 5), (7, 17, 9), (6, 4, 11), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (3, 13, 11), (10, 8, 11), (3, 11, 8), (1, 7, 10), (5, 7, 10), (9, 5, 15), (14, 6, 9), (10, 4, 11), (14, 4, 11), (10, 8, 12), (11, 12, 8), (0, 15, 9), (15, 6, 5), (5, 7, 6), (5, 9, 7), (1, 7, 4), (14, 7, 4), (10, 16, 4), (1, 4, 16), (7, 1, 17), (2, 5, 15), (11, 15, 14), (3, 14, 15), (5, 4, 6), (7, 4, 6), (0, 7, 9), (14, 9, 7), (0, 5, 9), (6, 5, 9), (14, 3, 17), (14, 9, 17), (3, 2, 13), (3, 13, 10), (3, 13, 8), (2, 13, 10), (2, 13, 8), (10, 8, 13), (7, 17, 0), (1, 17, 0), (14, 16, 17), (7, 16, 17), (10, 13, 11), (8, 13, 11), (16, 17, 4), (1, 17, 4) ]
bfFaceToTetra:        [ (36, 12), (0, 25), (11, 0), (0, 14), (40, 33), (3, 9), (21, 21), (14, 3), (42, 21), (43, 24), (6, 3), (18, 1), (19, 60), (0, 56), (14, 0), (2, 0), (28, 34), (26, 9), (44, 29), (12, 9), (18, 47), (7, 37), (36, 11), (45, 35), (10, 11), (46, 31), (11, 21), (8, 15), (1, 58), (30, 8), (40, 5), (3, 33), (2, 18), (47, 4), (59, 16), (1, 22), (21, 58), (2, 18), (17, 2), (58, 2), (12, 36), (15, 47), (4, 20), (4, 42), (60, 19), (17, 4), (24, 23), (38, 22), (22, 23), (6, 43), (23, 6), (22, 6), (48, 27), (48, 25), (25, 44), (7, 34), (30, 7), (25, 7), (28, 29), (20, 52), (9, 49), (10, 44), (29, 10), (36, 10), (33, 32), (5, 46), (50, 45), (41, 40), (57, 12), (58, 53), (51, 35), (26, 9), (52, 57), (13, 50), (49, 50), (41, 13), (39, 43), (55, 37), (37, 24), (59, 54), (38, 16), (37, 54), (5, 5), (33, 46), (27, 26), (35, 28), (42, 15), (21, 15), (38, 43), (24, 38), (26, 27), (26, 9), (31, 51), (32, 51), (19, 5), (45, 4), (17, 47), (53, 17), (19, 41), (34, 48), (49, 49), (29, 30), (13, 50), (31, 45), (36, 57), (35, 52), (52, 52), (34, 41), (1, 21), (52, 21), (56, 55), (56, 59), (54, 55), (39, 56), (55, 39), (16, 39), (41, 57), (41, 36), (1, 58), (20, 60), (59, 16), (54, 16), (53, 60), (53, 19) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (16, 7), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (6, 15), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (3, 17), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (1, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (1, 17), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (15, 5), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8), (10, 7), (6, 9), (11, 4), (8, 12), (15, 9), (7, 6), (4, 7), (16, 4), (7, 17), (15, 14), (4, 6), (7, 9), (5, 9), (14, 17), (9, 17), (3, 13), (2, 13), (10, 13), (8, 13), (17, 0), (16, 17), (11, 13), (17, 4) ]
New buffer sizes: bftetra = 61, bfFace = 124, bfEdge = 80
Using these numFreedtetra = 0, numFreedFace = 0, numFreedEdge = 0
FreedTetra: []
FreedFaces: []
FreedEdges: []
(mark) bfActiveFaces:          [ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 14, 15, 15, 15 ]
#active: 15 (cpct) bfActiveFaces:[ 6, 11, 12, 19, 22, 26, 39, 68, 69, 94, 97, 98, 117, 118, 119 ]
----------- check for flip: loop number 3 -----------
#active: 15 (cpct) bfActiveFaces:[ 6, 11, 12, 19, 22, 26, 39, 68, 69, 94, 97, 98, 117, 118, 119 ]
                    bfFlipInfo: [ 2, 0, 2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 0 ]
#indtrmnd: 3  bfIndetrmndFaces: [ 0, 2, 13 ]
                    bfFlipInfo: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ]
#indtrmnd: 0 bfIndetrmndFaces: []
              final bfFlipInfo: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ]
#bad: 2             bfBadFaces: [ 9, 10 ]
                          bfFlipInfo: [ 000000000000010000000000, 000000000000010101010000 ]
                          bfFlipInfo: [ 000000000000010000000000, 000000000000010101010000 ]
#indtrmnd: 0 bfIndeterminedConvexity: []
      finalized convexity bfFlipInfo: [ 000000000000010000000000, 000000000000010101010000 ]
#nonCvx: 1       bfNonconvexBadFaces: [ 1 ]
                 ThreeTwo bfFlipInfo: [ 000000000000010000000000, 000000000000010101000000 ]
#indtrmnd: 0 IndtrmndBadFaceThreeTwo: []
           Final ThreeTwo bfFlipInfo: [ 000000000000010000000000, 000000000000010101000000 ]
                   bfTetraMarkedFlip: [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
 (13 GOOD) Final -Marked- bfFlipInfo: [ 000000000010010000000000, 000000000000010101000000 ]
bfFirstPrefixSum (3-2):            [ 0, 0 ]
              final bfFlipInfo: [ 000000000010010000000000, 000000000000010101000000 ]
#flip: 1, 0 bfBadFacesToFlip: [ 0 ]
----------------------------- Flip! -----------------------------
# flips: 1 # tetra: 62 # face: 126 # edge: 81
bfTetra:              [ (10, 3, 1, 2), (3, 17, 14, 16), (16, 3, 1, 10), (10, 5, 2, 0), (14, 7, 4, 16), (17, 7, 4, 10), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (15, 6, 5, 11), (9, 0, 14, 3), (0, 1, 14, 3), (9, 0, 17, 14), (5, 4, 11, 6), (0, 10, 1, 2), (11, 10, 14, 4), (11, 10, 8, 13), (16, 1, 4, 10), (3, 14, 10, 16), (17, 7, 10, 1), (16, 17, 14, 7), (1, 17, 14, 3), (11, 12, 10, 5), (11, 2, 12, 5), (8, 11, 2, 12), (0, 15, 2, 3), (9, 6, 5, 15), (0, 5, 15, 9), (6, 15, 9, 14), (15, 3, 9, 14), (15, 3, 14, 11), (4, 6, 5, 7), (0, 7, 5, 9), (10, 5, 0, 7), (2, 5, 11, 15), (7, 14, 6, 9), (17, 14, 0, 1), (2, 8, 3, 11), (8, 11, 12, 10), (13, 10, 8, 2), (7, 10, 1, 0), (17, 0, 7, 1), (4, 11, 10, 5), (2, 12, 10, 8), (3, 9, 0, 15), (4, 14, 6, 7), (7, 4, 10, 5), (14, 4, 10, 16), (2, 0, 5, 15), (6, 11, 15, 14), (6, 4, 11, 14), (5, 9, 7, 6), (7, 17, 14, 9), (17, 4, 16, 1), (11, 8, 3, 13), (3, 2, 13, 8), (10, 3, 2, 13), (9, 0, 7, 17), (3, 1, 17, 16), (13, 11, 10, 3), (7, 4, 16, 17), (4, 10, 1, 17) ]
bfTetraToFace:        [ (0, 14, 13, 15), (118, 11, 28, 108), (15, 38, 37, 39), (5, 7, 31, 10), (12, 33, 42, 95), (65, 94, 125, 44), (10, 50, 49, 51), (21, 56, 55, 57), (27, 11, 10, 29), (0, 71, 60, 91), (24, 62, 61, 63), (26, 24, 2, 22), (40, 109, 19, 68), (73, 75, 102, 40), (14, 3, 7, 30), (41, 87, 86, 27), (115, 121, 120, 80), (45, 96, 38, 97), (20, 37, 11, 32), (82, 124, 98, 125), (59, 42, 119, 118), (108, 26, 36, 6), (51, 35, 48, 47), (50, 48, 19, 46), (46, 9, 89, 78), (57, 1, 54, 53), (91, 84, 17, 6), (84, 90, 0, 52), (58, 85, 16, 17), (62, 58, 101, 18), (29, 100, 56, 101), (92, 25, 103, 102), (93, 84, 58, 64), (64, 4, 83, 31), (71, 55, 99, 16), (85, 70, 105, 23), (22, 117, 0, 40), (81, 21, 78, 77), (47, 88, 80, 89), (76, 114, 113, 115), (30, 67, 4, 82), (67, 98, 117, 116), (0, 43, 8, 86), (88, 76, 9, 49), (90, 54, 18, 61), (23, 103, 95, 66), (0, 83, 25, 65), (96, 20, 33, 41), (52, 99, 53, 99), (100, 16, 74, 60), (0, 74, 66, 73), (70, 92, 0, 93), (109, 105, 72, 59), (97, 69, 123, 122), (112, 79, 121, 81), (114, 112, 77, 110), (110, 113, 111, 13), (116, 72, 68, 104), (69, 28, 39, 36), (34, 111, 79, 120), (122, 119, 44, 12), (124, 123, 94, 45) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 20, 21), (27, 70, 77, 9), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (48, 29, 9, 63), (7, 64, 65, 79), (80, 63, 57, 31), (35, 36, 34, 10), (11, 8, 39, 40), (38, 5, 16, 17), (21, 17, 12, 22), (24, 10, 14, 49), (38, 0, 52, 15), (43, 44, 42, 18), (2, 21, 0, 18), (2, 19, 4, 21), (43, 71, 44, 76), (18, 70, 30, 15), (51, 29, 67, 52), (23, 0, 1, 13), (11, 3, 0, 22), (59, 24, 31, 29), (25, 56, 78, 54), (74, 75, 28, 64), (26, 32, 13, 31), (21, 12, 27, 24), (9, 26, 65, 80), (41, 57, 47, 13), (77, 9, 7, 70), (65, 48, 41, 19), (4, 70, 20, 21), (33, 25, 15, 35), (36, 10, 16, 33), (15, 34, 8, 36), (56, 53, 60, 16), (33, 34, 37, 1), (2, 39, 40, 5), (58, 69, 61, 52), (14, 49, 0, 37), (43, 49, 69, 61), (14, 58, 50, 61), (66, 44, 40, 61), (66, 42, 21, 44), (40, 66, 38, 21), (17, 22, 67, 30), (63, 51, 62, 45), (46, 6, 43, 45), (68, 58, 10, 23), (57, 6, 45, 46), (14, 16, 39, 15), (49, 38, 48, 62), (68, 50, 44, 58), (0, 76, 41, 18), (19, 0, 53, 5), (16, 55, 56, 17), (56, 60, 54, 33), (25, 35, 74, 75), (73, 54, 11, 53), (57, 47, 46, 13), (23, 0, 76, 65), (41, 46, 0, 47), (59, 31, 30, 0), (15, 10, 34, 11), (53, 35, 60, 54), (42, 2, 40, 43), (61, 37, 29, 67), (63, 50, 48, 62), (63, 57, 45, 0), (30, 10, 29, 24), (9, 31, 64, 26), (1, 14, 39, 49), (37, 49, 52, 14), (50, 38, 22, 66), (67, 52, 50, 0), (29, 22, 0, 45), (51, 68, 58, 62), (65, 48, 68, 70), (71, 44, 79, 77), (41, 64, 32, 28), (56, 17, 78, 55), (75, 72, 5, 72), (55, 73, 53, 75), (12, 11, 74, 5), (72, 73, 43, 68), (71, 46, 76, 65), (4, 20, 27, 41), (28, 77, 78, 74), (72, 25, 17, 12), (63, 7, 65, 64), (79, 77, 31, 32), (79, 13, 80, 41) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 7, 10), (0, 5, 2), (1, 17, 14), (2, 0, 10), (5, 4, 11), (2, 12, 8), (5, 2, 10), (14, 16, 3), (4, 16, 7), (2, 10, 3), (2, 10, 1), (3, 1, 10), (14, 6, 15), (9, 6, 15), (3, 9, 15), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (14, 6, 7), (0, 14, 3), (5, 7, 4), (1, 14, 3), (11, 10, 14), (16, 3, 17), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (14, 4, 16), (3, 11, 10), (5, 11, 10), (1, 17, 3), (10, 16, 3), (10, 16, 1), (3, 1, 16), (17, 14, 0), (14, 4, 10), (14, 7, 16), (5, 4, 10), (7, 4, 17), (10, 1, 4), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (0, 5, 15), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (9, 14, 15), (7, 17, 14), (11, 15, 6), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (7, 4, 10), (14, 6, 4), (0, 7, 1), (9, 0, 17), (1, 17, 16), (6, 9, 7), (11, 15, 5), (7, 17, 9), (6, 4, 11), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (3, 13, 11), (10, 8, 11), (3, 11, 8), (1, 7, 10), (5, 7, 10), (9, 5, 15), (14, 6, 9), (10, 4, 11), (14, 4, 11), (10, 8, 12), (11, 12, 8), (0, 15, 9), (15, 6, 5), (5, 7, 6), (5, 9, 7), (4, 10, 17), (14, 7, 4), (10, 16, 4), (1, 4, 16), (7, 1, 17), (2, 5, 15), (11, 15, 14), (3, 14, 15), (5, 4, 6), (7, 4, 6), (0, 7, 9), (14, 9, 7), (0, 5, 9), (6, 5, 9), (14, 3, 17), (14, 9, 17), (3, 2, 13), (3, 13, 10), (3, 13, 8), (2, 13, 10), (2, 13, 8), (10, 8, 13), (7, 17, 0), (1, 17, 0), (14, 16, 17), (7, 16, 17), (10, 13, 11), (8, 13, 11), (16, 17, 4), (1, 17, 4), (1, 17, 10), (7, 10, 17) ]
bfFaceToTetra:        [ (36, 12), (0, 25), (11, 0), (0, 14), (40, 33), (3, 9), (21, 21), (14, 3), (42, 21), (43, 24), (6, 3), (18, 1), (19, 60), (0, 56), (14, 0), (2, 0), (28, 34), (26, 9), (44, 29), (12, 9), (18, 47), (7, 37), (36, 11), (45, 35), (10, 11), (46, 31), (11, 21), (8, 15), (1, 58), (30, 8), (40, 5), (3, 33), (2, 18), (47, 4), (59, 16), (1, 22), (21, 58), (2, 18), (17, 2), (58, 2), (12, 36), (15, 47), (4, 20), (4, 42), (60, 5), (17, 61), (24, 23), (38, 22), (22, 23), (6, 43), (23, 6), (22, 6), (48, 27), (48, 25), (25, 44), (7, 34), (30, 7), (25, 7), (28, 29), (20, 52), (9, 49), (10, 44), (29, 10), (36, 10), (33, 32), (5, 46), (50, 45), (41, 40), (57, 12), (58, 53), (51, 35), (26, 9), (52, 57), (13, 50), (49, 50), (41, 13), (39, 43), (55, 37), (37, 24), (59, 54), (38, 16), (37, 54), (19, 5), (33, 46), (27, 26), (35, 28), (42, 15), (21, 15), (38, 43), (24, 38), (26, 27), (26, 9), (31, 51), (32, 51), (61, 5), (45, 4), (17, 47), (53, 17), (19, 41), (34, 48), (49, 49), (29, 30), (13, 50), (31, 45), (36, 57), (35, 52), (52, 52), (34, 41), (1, 21), (52, 21), (56, 55), (56, 59), (54, 55), (39, 56), (55, 39), (16, 39), (41, 57), (41, 36), (1, 58), (20, 60), (59, 16), (54, 16), (53, 60), (53, 61), (19, 61), (5, 19) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (16, 7), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (6, 15), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (3, 17), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (1, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (1, 17), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (15, 5), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8), (10, 7), (6, 9), (11, 4), (8, 12), (15, 9), (7, 6), (4, 7), (16, 4), (7, 17), (15, 14), (4, 6), (7, 9), (5, 9), (14, 17), (9, 17), (3, 13), (2, 13), (10, 13), (8, 13), (17, 0), (16, 17), (11, 13), (17, 4), (17, 10) ]
New buffer sizes: bftetra = 62, bfFace = 126, bfEdge = 81
Using these numFreedtetra = 0, numFreedFace = 0, numFreedEdge = 0
FreedTetra: []
FreedFaces: []
FreedEdges: []
(mark) bfActiveFaces:          [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6 ]
#active: 6 (cpct) bfActiveFaces:[ 44, 45, 65, 82, 98, 123 ]
----------- check for flip: loop number 4 -----------
#active: 6 (cpct) bfActiveFaces:[ 44, 45, 65, 82, 98, 123 ]
                    bfFlipInfo: [ 0, 1, 0, 2, 0, 1 ]
#indtrmnd: 1  bfIndetrmndFaces: [ 3 ]
                    bfFlipInfo: [ 0, 1, 0, 0, 0, 1 ]
#indtrmnd: 0 bfIndetrmndFaces: []
              final bfFlipInfo: [ 0, 1, 0, 0, 0, 1 ]
#bad: 2             bfBadFaces: [ 1, 5 ]
                          bfFlipInfo: [ 000000000000010101100000, 000000000000001011100000 ]
                          bfFlipInfo: [ 000000000000010101100000, 000000000000001011100000 ]
#indtrmnd: 0 bfIndeterminedConvexity: []
      finalized convexity bfFlipInfo: [ 000000000000010101100000, 000000000000001011100000 ]
#nonCvx: 2       bfNonconvexBadFaces: [ 0, 1 ]
                 ThreeTwo bfFlipInfo: [ 000000000000010101100000, 000000000001001011100000 ]
#indtrmnd: 0 IndtrmndBadFaceThreeTwo: []
           Final ThreeTwo bfFlipInfo: [ 000000000000010101100000, 000000000001001011100000 ]
                   bfTetraMarkedFlip: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2 ]
 (13 GOOD) Final -Marked- bfFlipInfo: [ 000000000000010101000000, 000000000011001011100000 ]
bfFirstPrefixSum (3-2):            [ 0, 1 ]
              final bfFlipInfo: [ 000000000000010101000000, 000000000011001011100000 ]
#flip: 1, 1 bfBadFacesToFlip: [ 1 ]
freedTetra: [ 17 ]
freedFaces: [ 45, 97 ]
freedEdges: [ 32 ]
----------------------------- Flip! -----------------------------
# flips: 1 # tetra: 61 # face: 124 # edge: 80
bfTetra:              [ (10, 3, 1, 2), (3, 17, 14, 16), (16, 3, 1, 10), (10, 5, 2, 0), (14, 7, 4, 16), (17, 7, 4, 10), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (15, 6, 5, 11), (9, 0, 14, 3), (0, 1, 14, 3), (9, 0, 17, 14), (5, 4, 11, 6), (0, 10, 1, 2), (11, 10, 14, 4), (11, 10, 8, 13), (16, 1, 4, 10), (3, 14, 10, 16), (17, 7, 10, 1), (16, 17, 14, 7), (1, 17, 14, 3), (11, 12, 10, 5), (11, 2, 12, 5), (8, 11, 2, 12), (0, 15, 2, 3), (9, 6, 5, 15), (0, 5, 15, 9), (6, 15, 9, 14), (15, 3, 9, 14), (15, 3, 14, 11), (4, 6, 5, 7), (0, 7, 5, 9), (10, 5, 0, 7), (2, 5, 11, 15), (7, 14, 6, 9), (17, 14, 0, 1), (2, 8, 3, 11), (8, 11, 12, 10), (13, 10, 8, 2), (7, 10, 1, 0), (17, 0, 7, 1), (4, 11, 10, 5), (2, 12, 10, 8), (3, 9, 0, 15), (4, 14, 6, 7), (7, 4, 10, 5), (14, 4, 10, 16), (2, 0, 5, 15), (6, 11, 15, 14), (6, 4, 11, 14), (5, 9, 7, 6), (7, 17, 14, 9), (4, 10, 16, 17), (11, 8, 3, 13), (3, 2, 13, 8), (10, 3, 2, 13), (9, 0, 7, 17), (3, 1, 17, 16), (13, 11, 10, 3), (7, 4, 16, 17), (17, 10, 16, 1) ]
bfTetraToFace:        [ (0, 14, 13, 15), (118, 11, 28, 108), (15, 38, 37, 39), (5, 7, 31, 10), (12, 33, 42, 95), (65, 94, 125, 44), (10, 50, 49, 51), (21, 56, 55, 57), (27, 11, 10, 29), (0, 71, 60, 91), (24, 62, 61, 63), (26, 24, 2, 22), (40, 109, 19, 68), (73, 75, 102, 40), (14, 3, 7, 30), (41, 87, 86, 27), (115, 121, 120, 80), (45, 96, 38, 97), (20, 37, 11, 32), (82, 124, 98, 125), (59, 42, 119, 118), (108, 26, 36, 6), (51, 35, 48, 47), (50, 48, 19, 46), (46, 9, 89, 78), (57, 1, 54, 53), (91, 84, 17, 6), (84, 90, 0, 52), (58, 85, 16, 17), (62, 58, 101, 18), (29, 100, 56, 101), (92, 25, 103, 102), (93, 84, 58, 64), (64, 4, 83, 31), (71, 55, 99, 16), (85, 70, 105, 23), (22, 117, 0, 40), (81, 21, 78, 77), (47, 88, 80, 89), (76, 114, 113, 115), (30, 67, 4, 82), (67, 98, 117, 116), (0, 43, 8, 86), (88, 76, 9, 49), (90, 54, 18, 61), (23, 103, 95, 66), (0, 83, 25, 65), (96, 20, 33, 41), (52, 99, 53, 99), (100, 16, 74, 60), (0, 74, 66, 73), (70, 92, 0, 93), (109, 105, 72, 59), (123, 122, 94, 123), (112, 79, 121, 81), (114, 112, 77, 110), (110, 113, 111, 13), (116, 72, 68, 104), (69, 28, 39, 36), (34, 111, 79, 120), (122, 119, 44, 12), (0, 69, 124, 123) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 20, 21), (27, 70, 77, 9), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (48, 29, 9, 63), (7, 64, 65, 79), (80, 63, 57, 31), (35, 36, 34, 10), (11, 8, 39, 40), (38, 5, 16, 17), (21, 17, 12, 22), (24, 10, 14, 49), (38, 0, 52, 15), (43, 44, 42, 18), (2, 21, 0, 18), (2, 19, 4, 21), (43, 71, 44, 76), (18, 70, 30, 15), (51, 29, 67, 52), (23, 0, 1, 13), (11, 3, 0, 22), (59, 24, 31, 29), (25, 56, 78, 54), (74, 75, 28, 64), (26, 32, 13, 31), (21, 12, 27, 24), (9, 26, 65, 80), (41, 57, 47, 13), (77, 9, 7, 70), (65, 48, 41, 19), (4, 70, 20, 21), (33, 25, 15, 35), (36, 10, 16, 33), (15, 34, 8, 36), (56, 53, 60, 16), (33, 34, 37, 1), (2, 39, 40, 5), (58, 69, 61, 52), (14, 49, 0, 37), (43, 49, 69, 61), (14, 58, 50, 61), (66, 44, 40, 61), (66, 42, 21, 44), (40, 66, 38, 21), (17, 22, 67, 30), (63, 51, 62, 45), (46, 6, 43, 45), (68, 58, 10, 23), (57, 6, 45, 46), (14, 16, 39, 15), (49, 38, 48, 62), (68, 50, 44, 58), (0, 76, 41, 18), (19, 0, 53, 5), (16, 55, 56, 17), (56, 60, 54, 33), (25, 35, 74, 75), (73, 54, 11, 53), (57, 47, 46, 13), (23, 0, 76, 65), (41, 46, 0, 47), (59, 31, 30, 0), (15, 10, 34, 11), (53, 35, 60, 54), (42, 2, 40, 43), (61, 37, 29, 67), (63, 50, 48, 62), (63, 57, 45, 0), (30, 10, 29, 24), (9, 31, 64, 26), (1, 14, 39, 49), (37, 49, 52, 14), (50, 38, 22, 66), (67, 52, 50, 0), (29, 22, 0, 45), (51, 68, 58, 62), (65, 48, 68, 70), (71, 44, 31, 64), (79, 79, 80, 77), (56, 17, 78, 55), (75, 72, 5, 72), (55, 73, 53, 75), (12, 11, 74, 5), (72, 73, 43, 68), (71, 46, 76, 65), (4, 20, 27, 41), (28, 77, 78, 74), (72, 25, 17, 12), (63, 7, 65, 64), (79, 77, 80, 77), (41, 0, 13, 28) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 7, 10), (0, 5, 2), (1, 17, 14), (2, 0, 10), (5, 4, 11), (2, 12, 8), (5, 2, 10), (14, 16, 3), (4, 16, 7), (2, 10, 3), (2, 10, 1), (3, 1, 10), (14, 6, 15), (9, 6, 15), (3, 9, 15), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (14, 6, 7), (0, 14, 3), (5, 7, 4), (1, 14, 3), (11, 10, 14), (16, 3, 17), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (14, 4, 16), (3, 11, 10), (5, 11, 10), (1, 17, 3), (10, 16, 3), (10, 16, 1), (3, 1, 16), (17, 14, 0), (14, 4, 10), (14, 7, 16), (5, 4, 10), (7, 4, 17), (10, 1, 4), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (0, 5, 15), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (9, 14, 15), (7, 17, 14), (11, 15, 6), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (7, 4, 10), (14, 6, 4), (0, 7, 1), (9, 0, 17), (1, 17, 16), (6, 9, 7), (11, 15, 5), (7, 17, 9), (6, 4, 11), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (3, 13, 11), (10, 8, 11), (3, 11, 8), (1, 7, 10), (5, 7, 10), (9, 5, 15), (14, 6, 9), (10, 4, 11), (14, 4, 11), (10, 8, 12), (11, 12, 8), (0, 15, 9), (15, 6, 5), (5, 7, 6), (5, 9, 7), (4, 10, 17), (14, 7, 4), (10, 16, 4), (1, 4, 16), (7, 1, 17), (2, 5, 15), (11, 15, 14), (3, 14, 15), (5, 4, 6), (7, 4, 6), (0, 7, 9), (14, 9, 7), (0, 5, 9), (6, 5, 9), (14, 3, 17), (14, 9, 17), (3, 2, 13), (3, 13, 10), (3, 13, 8), (2, 13, 10), (2, 13, 8), (10, 8, 13), (7, 17, 0), (1, 17, 0), (14, 16, 17), (7, 16, 17), (10, 13, 11), (8, 13, 11), (16, 17, 4), (17, 10, 16), (1, 17, 10), (7, 10, 17) ]
bfFaceToTetra:        [ (61, 53), (0, 25), (11, 0), (0, 14), (40, 33), (3, 9), (21, 21), (14, 3), (42, 21), (43, 24), (6, 3), (18, 1), (19, 60), (0, 56), (14, 0), (2, 0), (28, 34), (26, 9), (44, 29), (12, 9), (18, 47), (7, 37), (36, 11), (45, 35), (10, 11), (46, 31), (11, 21), (8, 15), (1, 58), (30, 8), (40, 5), (3, 33), (2, 18), (47, 4), (59, 16), (1, 22), (21, 58), (2, 18), (17, 2), (58, 2), (12, 36), (15, 47), (4, 20), (4, 42), (60, 5), (17, 61), (24, 23), (38, 22), (22, 23), (6, 43), (23, 6), (22, 6), (48, 27), (48, 25), (25, 44), (7, 34), (30, 7), (25, 7), (28, 29), (20, 52), (9, 49), (10, 44), (29, 10), (36, 10), (33, 32), (5, 46), (50, 45), (41, 40), (57, 12), (58, 61), (51, 35), (26, 9), (52, 57), (13, 50), (49, 50), (41, 13), (39, 43), (55, 37), (37, 24), (59, 54), (38, 16), (37, 54), (19, 5), (33, 46), (27, 26), (35, 28), (42, 15), (21, 15), (38, 43), (24, 38), (26, 27), (26, 9), (31, 51), (32, 51), (53, 5), (45, 4), (17, 47), (53, 17), (19, 41), (34, 48), (49, 49), (29, 30), (13, 50), (31, 45), (36, 57), (35, 52), (52, 52), (34, 41), (1, 21), (52, 21), (56, 55), (56, 59), (54, 55), (39, 56), (55, 39), (16, 39), (41, 57), (41, 36), (1, 58), (20, 60), (59, 16), (54, 16), (53, 53), (53, 61), (61, 61), (5, 19) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (16, 7), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (6, 15), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (3, 17), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (1, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (1, 17), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (15, 5), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8), (10, 7), (6, 9), (11, 4), (8, 12), (15, 9), (7, 6), (4, 7), (16, 4), (7, 17), (15, 14), (4, 6), (7, 9), (5, 9), (14, 17), (9, 17), (3, 13), (2, 13), (10, 13), (8, 13), (17, 0), (16, 17), (11, 13), (17, 4), (17, 10) ]
New buffer sizes: bftetra = 62, bfFace = 126, bfEdge = 81
Using these numFreedtetra = 1, numFreedFace = 2, numFreedEdge = 1
FreedTetra: [ 17 ]
FreedFaces: [ 45, 97 ]
FreedEdges: [ 32 ]
(mark) bfActiveFaces:          [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0 ]
bfPrefixSum:                    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4 ]
#active: 4 (cpct) bfActiveFaces:[ 69, 94, 122, 124 ]
----------- check for flip: loop number 5 -----------
#active: 4 (cpct) bfActiveFaces:[ 69, 94, 122, 124 ]
                    bfFlipInfo: [ 0, 0, 2, 2 ]
#indtrmnd: 2  bfIndetrmndFaces: [ 2, 3 ]
                    bfFlipInfo: [ 0, 0, 0, 0 ]
#indtrmnd: 0 bfIndetrmndFaces: []
              final bfFlipInfo: [ 0, 0, 0, 0 ]
#bad: 0             bfBadFaces: []
                    bfFlipInfo: [ 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 2, 0, 0, 0, 2, 2, 2, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 2, 0, 2, 0, 2, 1, 2, 0, 2, 0, 0, 0, 1, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0 ]
#indtrmnd: 22  bfIndetrmndFaces: [ 2, 13, 26, 30, 39, 58, 66, 77, 81, 82, 83, 85, 94, 96, 98, 100, 102, 110, 112, 114, 116, 118 ]
                    bfFlipInfo: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
#indtrmnd: 0 bfIndetrmndFaces: []
----------------------------- Final! -----------------------------
# tetra: 61 # face: 124 # edge: 80
bfTetra:              [ (10, 3, 1, 2), (3, 17, 14, 16), (16, 3, 1, 10), (10, 5, 2, 0), (14, 7, 4, 16), (17, 7, 4, 10), (12, 10, 5, 2), (15, 2, 3, 11), (3, 14, 11, 10), (15, 6, 5, 11), (9, 0, 14, 3), (0, 1, 14, 3), (9, 0, 17, 14), (5, 4, 11, 6), (0, 10, 1, 2), (11, 10, 14, 4), (11, 10, 8, 13), (3, 14, 10, 16), (17, 7, 10, 1), (16, 17, 14, 7), (1, 17, 14, 3), (11, 12, 10, 5), (11, 2, 12, 5), (8, 11, 2, 12), (0, 15, 2, 3), (9, 6, 5, 15), (0, 5, 15, 9), (6, 15, 9, 14), (15, 3, 9, 14), (15, 3, 14, 11), (4, 6, 5, 7), (0, 7, 5, 9), (10, 5, 0, 7), (2, 5, 11, 15), (7, 14, 6, 9), (17, 14, 0, 1), (2, 8, 3, 11), (8, 11, 12, 10), (13, 10, 8, 2), (7, 10, 1, 0), (17, 0, 7, 1), (4, 11, 10, 5), (2, 12, 10, 8), (3, 9, 0, 15), (4, 14, 6, 7), (7, 4, 10, 5), (14, 4, 10, 16), (2, 0, 5, 15), (6, 11, 15, 14), (6, 4, 11, 14), (5, 9, 7, 6), (7, 17, 14, 9), (4, 10, 16, 17), (11, 8, 3, 13), (3, 2, 13, 8), (10, 3, 2, 13), (9, 0, 7, 17), (3, 1, 17, 16), (13, 11, 10, 3), (7, 4, 16, 17), (17, 10, 16, 1) ]
bfTetraToFace:        [ (0, 14, 13, 15), (116, 11, 28, 106), (15, 38, 37, 39), (5, 7, 31, 10), (12, 33, 42, 94), (64, 93, 123, 44), (10, 49, 48, 50), (21, 55, 54, 56), (27, 11, 10, 29), (0, 70, 59, 90), (24, 61, 60, 62), (26, 24, 2, 22), (40, 107, 19, 67), (72, 74, 100, 40), (14, 3, 7, 30), (41, 86, 85, 27), (113, 119, 118, 79), (20, 37, 11, 32), (81, 122, 96, 123), (58, 42, 117, 116), (106, 26, 36, 6), (50, 35, 47, 46), (49, 47, 19, 45), (45, 9, 88, 77), (56, 1, 53, 52), (90, 83, 17, 6), (83, 89, 0, 51), (57, 84, 16, 17), (61, 57, 99, 18), (29, 98, 55, 99), (91, 25, 101, 100), (92, 83, 57, 63), (63, 4, 82, 31), (70, 54, 97, 16), (84, 69, 103, 23), (22, 115, 0, 40), (80, 21, 77, 76), (46, 87, 79, 88), (75, 112, 111, 113), (30, 66, 4, 81), (66, 96, 115, 114), (0, 43, 8, 85), (87, 75, 9, 48), (89, 53, 18, 60), (23, 101, 94, 65), (0, 82, 25, 64), (95, 20, 33, 41), (51, 97, 52, 97), (98, 16, 73, 59), (0, 73, 65, 72), (69, 91, 0, 92), (107, 103, 71, 58), (121, 120, 93, 121), (110, 78, 119, 80), (112, 110, 76, 108), (108, 111, 109, 13), (114, 71, 67, 102), (68, 28, 39, 36), (34, 109, 78, 118), (120, 117, 44, 12), (0, 68, 122, 121) ]
bfTetraToEdge:        [ (12, 13, 11, 4), (5, 3, 20, 21), (27, 69, 76, 9), (27, 28, 26, 4), (12, 13, 10, 11), (23, 8, 6, 1), (47, 29, 9, 62), (7, 63, 64, 78), (79, 62, 56, 31), (34, 35, 33, 10), (11, 8, 38, 39), (37, 5, 16, 17), (21, 17, 12, 22), (24, 10, 14, 48), (37, 0, 51, 15), (42, 43, 41, 18), (2, 21, 0, 18), (2, 19, 4, 21), (42, 70, 43, 75), (18, 69, 30, 15), (50, 29, 66, 51), (23, 0, 1, 13), (11, 3, 0, 22), (58, 24, 31, 29), (25, 55, 77, 53), (73, 74, 21, 12), (27, 24, 9, 26), (64, 79, 40, 56), (46, 13, 76, 9), (7, 69, 64, 47), (40, 19, 4, 69), (20, 21, 32, 25), (15, 34, 35, 10), (16, 32, 15, 33), (8, 35, 55, 52), (59, 16, 32, 33), (36, 1, 2, 38), (39, 5, 57, 68), (60, 51, 14, 48), (0, 36, 42, 48), (68, 60, 14, 57), (49, 60, 65, 43), (39, 60, 65, 41), (21, 43, 39, 65), (37, 21, 17, 22), (66, 30, 62, 50), (61, 44, 45, 6), (42, 44, 67, 57), (10, 23, 56, 6), (44, 45, 14, 16), (38, 15, 48, 37), (47, 61, 67, 49), (43, 57, 0, 75), (40, 18, 19, 0), (52, 5, 16, 54), (55, 17, 55, 59), (53, 32, 25, 34), (73, 74, 72, 53), (11, 52, 56, 46), (45, 13, 23, 0), (75, 64, 40, 45), (0, 46, 58, 31), (30, 0, 15, 10), (33, 11, 52, 34), (59, 53, 41, 2), (39, 42, 60, 36), (29, 66, 62, 49), (47, 61, 62, 56), (44, 0, 30, 10), (29, 24, 9, 31), (63, 26, 1, 14), (38, 48, 36, 48), (51, 14, 49, 37), (22, 65, 66, 51), (49, 0, 29, 22), (0, 44, 50, 67), (57, 61, 64, 47), (67, 69, 70, 43), (31, 63, 78, 78), (79, 76, 55, 17), (77, 54, 74, 71), (5, 71, 54, 72), (52, 74, 12, 11), (73, 5, 71, 72), (42, 67, 70, 45), (75, 64, 4, 20), (27, 40, 28, 76), (77, 73, 71, 25), (17, 12, 62, 7), (64, 63, 78, 76), (79, 76, 40, 0) ]
bfFace:               [ (1, 2, 3), (0, 2, 3), (0, 1, 3), (0, 1, 2), (0, 7, 10), (0, 5, 2), (1, 17, 14), (2, 0, 10), (5, 4, 11), (2, 12, 8), (5, 2, 10), (14, 16, 3), (4, 16, 7), (2, 10, 3), (2, 10, 1), (3, 1, 10), (14, 6, 15), (9, 6, 15), (3, 9, 15), (5, 11, 2), (14, 10, 16), (2, 3, 11), (0, 1, 14), (14, 6, 7), (0, 14, 3), (5, 7, 4), (1, 14, 3), (11, 10, 14), (16, 3, 17), (3, 14, 11), (1, 0, 10), (5, 0, 10), (3, 14, 10), (14, 4, 16), (3, 11, 10), (5, 11, 10), (1, 17, 3), (10, 16, 3), (10, 16, 1), (3, 1, 16), (17, 14, 0), (14, 4, 10), (14, 7, 16), (5, 4, 10), (7, 4, 17), (11, 2, 12), (11, 12, 10), (11, 12, 5), (2, 12, 10), (2, 12, 5), (10, 5, 12), (0, 5, 15), (0, 15, 2), (0, 15, 3), (11, 15, 2), (11, 15, 3), (2, 3, 15), (9, 14, 15), (7, 17, 14), (11, 15, 6), (3, 9, 0), (3, 9, 14), (0, 14, 9), (5, 0, 7), (7, 4, 10), (14, 6, 4), (0, 7, 1), (9, 0, 17), (1, 17, 16), (6, 9, 7), (11, 15, 5), (7, 17, 9), (6, 4, 11), (14, 6, 11), (5, 11, 6), (2, 10, 8), (2, 8, 3), (2, 8, 11), (3, 13, 11), (10, 8, 11), (3, 11, 8), (1, 7, 10), (5, 7, 10), (9, 5, 15), (14, 6, 9), (10, 4, 11), (14, 4, 11), (10, 8, 12), (11, 12, 8), (0, 15, 9), (15, 6, 5), (5, 7, 6), (5, 9, 7), (4, 10, 17), (14, 7, 4), (10, 16, 4), (7, 1, 17), (2, 5, 15), (11, 15, 14), (3, 14, 15), (5, 4, 6), (7, 4, 6), (0, 7, 9), (14, 9, 7), (0, 5, 9), (6, 5, 9), (14, 3, 17), (14, 9, 17), (3, 2, 13), (3, 13, 10), (3, 13, 8), (2, 13, 10), (2, 13, 8), (10, 8, 13), (7, 17, 0), (1, 17, 0), (14, 16, 17), (7, 16, 17), (10, 13, 11), (8, 13, 11), (16, 17, 4), (17, 10, 16), (1, 17, 10), (7, 10, 17) ]
bfFaceToTetra:        [ (60, 52), (0, 24), (11, 0), (0, 14), (39, 32), (3, 9), (20, 20), (14, 3), (41, 20), (42, 23), (6, 3), (17, 1), (18, 59), (0, 55), (14, 0), (2, 0), (27, 33), (25, 9), (43, 28), (12, 9), (17, 46), (7, 36), (35, 11), (44, 34), (10, 11), (45, 30), (11, 20), (8, 15), (1, 57), (29, 8), (39, 5), (3, 32), (2, 17), (46, 4), (58, 16), (1, 21), (20, 57), (2, 17), (16, 2), (57, 2), (12, 35), (15, 46), (4, 19), (4, 41), (59, 5), (23, 22), (37, 21), (21, 22), (6, 42), (22, 6), (21, 6), (47, 26), (47, 24), (24, 43), (7, 33), (29, 7), (24, 7), (27, 28), (19, 51), (9, 48), (10, 43), (28, 10), (35, 10), (32, 31), (5, 45), (49, 44), (40, 39), (56, 12), (57, 60), (50, 34), (25, 9), (51, 56), (13, 49), (48, 49), (40, 13), (38, 42), (54, 36), (36, 23), (58, 53), (37, 16), (36, 53), (18, 5), (32, 45), (26, 25), (34, 27), (41, 15), (20, 15), (37, 42), (23, 37), (25, 26), (25, 9), (30, 50), (31, 50), (52, 5), (44, 4), (16, 46), (18, 40), (33, 47), (48, 48), (28, 29), (13, 49), (30, 44), (35, 56), (34, 51), (51, 51), (33, 40), (1, 20), (51, 20), (55, 54), (55, 58), (53, 54), (38, 55), (54, 38), (16, 38), (40, 56), (40, 35), (1, 57), (19, 59), (58, 16), (53, 16), (52, 52), (52, 60), (60, 60), (5, 18) ]
bfEdge:               [ (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 5), (16, 7), (2, 5), (14, 16), (5, 10), (2, 10), (3, 10), (1, 10), (6, 15), (5, 11), (2, 11), (3, 11), (0, 14), (1, 14), (3, 17), (3, 14), (11, 14), (10, 0), (14, 10), (11, 10), (10, 16), (3, 16), (1, 16), (14, 4), (5, 4), (10, 4), (11, 12), (2, 12), (10, 12), (5, 12), (0, 15), (11, 15), (2, 15), (3, 15), (1, 17), (3, 9), (0, 9), (14, 9), (5, 7), (0, 7), (1, 7), (14, 7), (15, 5), (14, 6), (5, 6), (11, 6), (2, 8), (10, 8), (3, 8), (11, 8), (10, 7), (6, 9), (11, 4), (8, 12), (15, 9), (7, 6), (4, 7), (16, 4), (7, 17), (15, 14), (4, 6), (7, 9), (5, 9), (14, 17), (9, 17), (3, 13), (2, 13), (10, 13), (8, 13), (17, 0), (16, 17), (11, 13), (17, 4), (17, 10) ]
number of tetra:61
number of points:18
